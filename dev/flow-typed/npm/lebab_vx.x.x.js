// flow-typed signature: 6c41bca7b3667bb2054764012bfa830a
// flow-typed version: <<STUB>>/lebab_v^2.7.1/flow_v0.40.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'lebab'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'lebab' {
  declare module.exports: any;
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'lebab/bin/index' {
  declare module.exports: any;
}

declare module 'lebab/lib/builtinTransforms' {
  declare module.exports: any;
}

declare module 'lebab/lib/Cli' {
  declare module.exports: any;
}

declare module 'lebab/lib/io' {
  declare module.exports: any;
}

declare module 'lebab/lib/Logger' {
  declare module.exports: any;
}

declare module 'lebab/lib/OptionParser' {
  declare module.exports: any;
}

declare module 'lebab/lib/Parser' {
  declare module.exports: any;
}

declare module 'lebab/lib/scope/BlockScope' {
  declare module.exports: any;
}

declare module 'lebab/lib/scope/FunctionHoister' {
  declare module.exports: any;
}

declare module 'lebab/lib/scope/FunctionScope' {
  declare module.exports: any;
}

declare module 'lebab/lib/scope/Scope' {
  declare module.exports: any;
}

declare module 'lebab/lib/scope/ScopeManager' {
  declare module.exports: any;
}

declare module 'lebab/lib/scope/Variable' {
  declare module.exports: any;
}

declare module 'lebab/lib/scope/VariableGroup' {
  declare module.exports: any;
}

declare module 'lebab/lib/scope/VariableMarker' {
  declare module.exports: any;
}

declare module 'lebab/lib/syntax/ArrowFunctionExpression' {
  declare module.exports: any;
}

declare module 'lebab/lib/syntax/BaseSyntax' {
  declare module.exports: any;
}

declare module 'lebab/lib/syntax/ExportNamedDeclaration' {
  declare module.exports: any;
}

declare module 'lebab/lib/syntax/ImportDeclaration' {
  declare module.exports: any;
}

declare module 'lebab/lib/syntax/ImportDefaultSpecifier' {
  declare module.exports: any;
}

declare module 'lebab/lib/syntax/ImportSpecifier' {
  declare module.exports: any;
}

declare module 'lebab/lib/syntax/TemplateElement' {
  declare module.exports: any;
}

declare module 'lebab/lib/syntax/TemplateLiteral' {
  declare module.exports: any;
}

declare module 'lebab/lib/syntax/VariableDeclaration' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/argRest' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/argSpread' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/arrow' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/class/extractComments' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/class/index' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/class/inheritance/ImportUtilDetector' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/class/inheritance/Inheritance' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/class/inheritance/Prototypal' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/class/inheritance/RequireUtilDetector' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/class/inheritance/RequireUtilInheritsDetector' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/class/inheritance/UtilInherits' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/class/isFunctionProperty' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/class/isTransformableToMethod' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/class/matchFunctionAssignment' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/class/matchFunctionDeclaration' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/class/matchFunctionVar' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/class/matchObjectDefinePropertyCall' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/class/matchPrototypeFunctionAssignment' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/class/matchPrototypeObjectAssignment' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/class/PotentialClass' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/class/PotentialConstructor' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/class/PotentialMethod' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/commonjs/exportCommonjs' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/commonjs/importCommonjs' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/commonjs/index' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/commonjs/isExports' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/commonjs/isModuleExports' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/commonjs/isVarWithRequireCalls' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/commonjs/matchDefaultExport' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/commonjs/matchNamedExport' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/commonjs/matchRequire' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/defaultParam/index' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/defaultParam/matchIfUndefinedAssignment' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/defaultParam/matchOrAssignment' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/defaultParam/matchTernaryAssignment' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/destructParam' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/exponent' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/forEach/index' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/forEach/validateForLoop' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/forOf' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/includes/comparison' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/includes/index' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/includes/matchesIndexOf' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/let' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/multiVar' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/noStrict' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/objMethod' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/objShorthand' {
  declare module.exports: any;
}

declare module 'lebab/lib/transform/template' {
  declare module.exports: any;
}

declare module 'lebab/lib/Transformer' {
  declare module.exports: any;
}

declare module 'lebab/lib/traverser' {
  declare module.exports: any;
}

declare module 'lebab/lib/utils/copyComments' {
  declare module.exports: any;
}

declare module 'lebab/lib/utils/destructuring' {
  declare module.exports: any;
}

declare module 'lebab/lib/utils/functionType' {
  declare module.exports: any;
}

declare module 'lebab/lib/utils/Hierarchy' {
  declare module.exports: any;
}

declare module 'lebab/lib/utils/isEqualAst' {
  declare module.exports: any;
}

declare module 'lebab/lib/utils/isString' {
  declare module.exports: any;
}

declare module 'lebab/lib/utils/matchAliasedForLoop' {
  declare module.exports: any;
}

declare module 'lebab/lib/utils/matchesAst' {
  declare module.exports: any;
}

declare module 'lebab/lib/utils/multiReplaceStatement' {
  declare module.exports: any;
}

declare module 'lebab/lib/utils/variableType' {
  declare module.exports: any;
}

declare module 'lebab/lib/withScope' {
  declare module.exports: any;
}

// Filename aliases
declare module 'lebab/bin/index.js' {
  declare module.exports: $Exports<'lebab/bin/index'>;
}
declare module 'lebab/index' {
  declare module.exports: $Exports<'lebab'>;
}
declare module 'lebab/index.js' {
  declare module.exports: $Exports<'lebab'>;
}
declare module 'lebab/lib/builtinTransforms.js' {
  declare module.exports: $Exports<'lebab/lib/builtinTransforms'>;
}
declare module 'lebab/lib/Cli.js' {
  declare module.exports: $Exports<'lebab/lib/Cli'>;
}
declare module 'lebab/lib/io.js' {
  declare module.exports: $Exports<'lebab/lib/io'>;
}
declare module 'lebab/lib/Logger.js' {
  declare module.exports: $Exports<'lebab/lib/Logger'>;
}
declare module 'lebab/lib/OptionParser.js' {
  declare module.exports: $Exports<'lebab/lib/OptionParser'>;
}
declare module 'lebab/lib/Parser.js' {
  declare module.exports: $Exports<'lebab/lib/Parser'>;
}
declare module 'lebab/lib/scope/BlockScope.js' {
  declare module.exports: $Exports<'lebab/lib/scope/BlockScope'>;
}
declare module 'lebab/lib/scope/FunctionHoister.js' {
  declare module.exports: $Exports<'lebab/lib/scope/FunctionHoister'>;
}
declare module 'lebab/lib/scope/FunctionScope.js' {
  declare module.exports: $Exports<'lebab/lib/scope/FunctionScope'>;
}
declare module 'lebab/lib/scope/Scope.js' {
  declare module.exports: $Exports<'lebab/lib/scope/Scope'>;
}
declare module 'lebab/lib/scope/ScopeManager.js' {
  declare module.exports: $Exports<'lebab/lib/scope/ScopeManager'>;
}
declare module 'lebab/lib/scope/Variable.js' {
  declare module.exports: $Exports<'lebab/lib/scope/Variable'>;
}
declare module 'lebab/lib/scope/VariableGroup.js' {
  declare module.exports: $Exports<'lebab/lib/scope/VariableGroup'>;
}
declare module 'lebab/lib/scope/VariableMarker.js' {
  declare module.exports: $Exports<'lebab/lib/scope/VariableMarker'>;
}
declare module 'lebab/lib/syntax/ArrowFunctionExpression.js' {
  declare module.exports: $Exports<'lebab/lib/syntax/ArrowFunctionExpression'>;
}
declare module 'lebab/lib/syntax/BaseSyntax.js' {
  declare module.exports: $Exports<'lebab/lib/syntax/BaseSyntax'>;
}
declare module 'lebab/lib/syntax/ExportNamedDeclaration.js' {
  declare module.exports: $Exports<'lebab/lib/syntax/ExportNamedDeclaration'>;
}
declare module 'lebab/lib/syntax/ImportDeclaration.js' {
  declare module.exports: $Exports<'lebab/lib/syntax/ImportDeclaration'>;
}
declare module 'lebab/lib/syntax/ImportDefaultSpecifier.js' {
  declare module.exports: $Exports<'lebab/lib/syntax/ImportDefaultSpecifier'>;
}
declare module 'lebab/lib/syntax/ImportSpecifier.js' {
  declare module.exports: $Exports<'lebab/lib/syntax/ImportSpecifier'>;
}
declare module 'lebab/lib/syntax/TemplateElement.js' {
  declare module.exports: $Exports<'lebab/lib/syntax/TemplateElement'>;
}
declare module 'lebab/lib/syntax/TemplateLiteral.js' {
  declare module.exports: $Exports<'lebab/lib/syntax/TemplateLiteral'>;
}
declare module 'lebab/lib/syntax/VariableDeclaration.js' {
  declare module.exports: $Exports<'lebab/lib/syntax/VariableDeclaration'>;
}
declare module 'lebab/lib/transform/argRest.js' {
  declare module.exports: $Exports<'lebab/lib/transform/argRest'>;
}
declare module 'lebab/lib/transform/argSpread.js' {
  declare module.exports: $Exports<'lebab/lib/transform/argSpread'>;
}
declare module 'lebab/lib/transform/arrow.js' {
  declare module.exports: $Exports<'lebab/lib/transform/arrow'>;
}
declare module 'lebab/lib/transform/class/extractComments.js' {
  declare module.exports: $Exports<'lebab/lib/transform/class/extractComments'>;
}
declare module 'lebab/lib/transform/class/index.js' {
  declare module.exports: $Exports<'lebab/lib/transform/class/index'>;
}
declare module 'lebab/lib/transform/class/inheritance/ImportUtilDetector.js' {
  declare module.exports: $Exports<'lebab/lib/transform/class/inheritance/ImportUtilDetector'>;
}
declare module 'lebab/lib/transform/class/inheritance/Inheritance.js' {
  declare module.exports: $Exports<'lebab/lib/transform/class/inheritance/Inheritance'>;
}
declare module 'lebab/lib/transform/class/inheritance/Prototypal.js' {
  declare module.exports: $Exports<'lebab/lib/transform/class/inheritance/Prototypal'>;
}
declare module 'lebab/lib/transform/class/inheritance/RequireUtilDetector.js' {
  declare module.exports: $Exports<'lebab/lib/transform/class/inheritance/RequireUtilDetector'>;
}
declare module 'lebab/lib/transform/class/inheritance/RequireUtilInheritsDetector.js' {
  declare module.exports: $Exports<'lebab/lib/transform/class/inheritance/RequireUtilInheritsDetector'>;
}
declare module 'lebab/lib/transform/class/inheritance/UtilInherits.js' {
  declare module.exports: $Exports<'lebab/lib/transform/class/inheritance/UtilInherits'>;
}
declare module 'lebab/lib/transform/class/isFunctionProperty.js' {
  declare module.exports: $Exports<'lebab/lib/transform/class/isFunctionProperty'>;
}
declare module 'lebab/lib/transform/class/isTransformableToMethod.js' {
  declare module.exports: $Exports<'lebab/lib/transform/class/isTransformableToMethod'>;
}
declare module 'lebab/lib/transform/class/matchFunctionAssignment.js' {
  declare module.exports: $Exports<'lebab/lib/transform/class/matchFunctionAssignment'>;
}
declare module 'lebab/lib/transform/class/matchFunctionDeclaration.js' {
  declare module.exports: $Exports<'lebab/lib/transform/class/matchFunctionDeclaration'>;
}
declare module 'lebab/lib/transform/class/matchFunctionVar.js' {
  declare module.exports: $Exports<'lebab/lib/transform/class/matchFunctionVar'>;
}
declare module 'lebab/lib/transform/class/matchObjectDefinePropertyCall.js' {
  declare module.exports: $Exports<'lebab/lib/transform/class/matchObjectDefinePropertyCall'>;
}
declare module 'lebab/lib/transform/class/matchPrototypeFunctionAssignment.js' {
  declare module.exports: $Exports<'lebab/lib/transform/class/matchPrototypeFunctionAssignment'>;
}
declare module 'lebab/lib/transform/class/matchPrototypeObjectAssignment.js' {
  declare module.exports: $Exports<'lebab/lib/transform/class/matchPrototypeObjectAssignment'>;
}
declare module 'lebab/lib/transform/class/PotentialClass.js' {
  declare module.exports: $Exports<'lebab/lib/transform/class/PotentialClass'>;
}
declare module 'lebab/lib/transform/class/PotentialConstructor.js' {
  declare module.exports: $Exports<'lebab/lib/transform/class/PotentialConstructor'>;
}
declare module 'lebab/lib/transform/class/PotentialMethod.js' {
  declare module.exports: $Exports<'lebab/lib/transform/class/PotentialMethod'>;
}
declare module 'lebab/lib/transform/commonjs/exportCommonjs.js' {
  declare module.exports: $Exports<'lebab/lib/transform/commonjs/exportCommonjs'>;
}
declare module 'lebab/lib/transform/commonjs/importCommonjs.js' {
  declare module.exports: $Exports<'lebab/lib/transform/commonjs/importCommonjs'>;
}
declare module 'lebab/lib/transform/commonjs/index.js' {
  declare module.exports: $Exports<'lebab/lib/transform/commonjs/index'>;
}
declare module 'lebab/lib/transform/commonjs/isExports.js' {
  declare module.exports: $Exports<'lebab/lib/transform/commonjs/isExports'>;
}
declare module 'lebab/lib/transform/commonjs/isModuleExports.js' {
  declare module.exports: $Exports<'lebab/lib/transform/commonjs/isModuleExports'>;
}
declare module 'lebab/lib/transform/commonjs/isVarWithRequireCalls.js' {
  declare module.exports: $Exports<'lebab/lib/transform/commonjs/isVarWithRequireCalls'>;
}
declare module 'lebab/lib/transform/commonjs/matchDefaultExport.js' {
  declare module.exports: $Exports<'lebab/lib/transform/commonjs/matchDefaultExport'>;
}
declare module 'lebab/lib/transform/commonjs/matchNamedExport.js' {
  declare module.exports: $Exports<'lebab/lib/transform/commonjs/matchNamedExport'>;
}
declare module 'lebab/lib/transform/commonjs/matchRequire.js' {
  declare module.exports: $Exports<'lebab/lib/transform/commonjs/matchRequire'>;
}
declare module 'lebab/lib/transform/defaultParam/index.js' {
  declare module.exports: $Exports<'lebab/lib/transform/defaultParam/index'>;
}
declare module 'lebab/lib/transform/defaultParam/matchIfUndefinedAssignment.js' {
  declare module.exports: $Exports<'lebab/lib/transform/defaultParam/matchIfUndefinedAssignment'>;
}
declare module 'lebab/lib/transform/defaultParam/matchOrAssignment.js' {
  declare module.exports: $Exports<'lebab/lib/transform/defaultParam/matchOrAssignment'>;
}
declare module 'lebab/lib/transform/defaultParam/matchTernaryAssignment.js' {
  declare module.exports: $Exports<'lebab/lib/transform/defaultParam/matchTernaryAssignment'>;
}
declare module 'lebab/lib/transform/destructParam.js' {
  declare module.exports: $Exports<'lebab/lib/transform/destructParam'>;
}
declare module 'lebab/lib/transform/exponent.js' {
  declare module.exports: $Exports<'lebab/lib/transform/exponent'>;
}
declare module 'lebab/lib/transform/forEach/index.js' {
  declare module.exports: $Exports<'lebab/lib/transform/forEach/index'>;
}
declare module 'lebab/lib/transform/forEach/validateForLoop.js' {
  declare module.exports: $Exports<'lebab/lib/transform/forEach/validateForLoop'>;
}
declare module 'lebab/lib/transform/forOf.js' {
  declare module.exports: $Exports<'lebab/lib/transform/forOf'>;
}
declare module 'lebab/lib/transform/includes/comparison.js' {
  declare module.exports: $Exports<'lebab/lib/transform/includes/comparison'>;
}
declare module 'lebab/lib/transform/includes/index.js' {
  declare module.exports: $Exports<'lebab/lib/transform/includes/index'>;
}
declare module 'lebab/lib/transform/includes/matchesIndexOf.js' {
  declare module.exports: $Exports<'lebab/lib/transform/includes/matchesIndexOf'>;
}
declare module 'lebab/lib/transform/let.js' {
  declare module.exports: $Exports<'lebab/lib/transform/let'>;
}
declare module 'lebab/lib/transform/multiVar.js' {
  declare module.exports: $Exports<'lebab/lib/transform/multiVar'>;
}
declare module 'lebab/lib/transform/noStrict.js' {
  declare module.exports: $Exports<'lebab/lib/transform/noStrict'>;
}
declare module 'lebab/lib/transform/objMethod.js' {
  declare module.exports: $Exports<'lebab/lib/transform/objMethod'>;
}
declare module 'lebab/lib/transform/objShorthand.js' {
  declare module.exports: $Exports<'lebab/lib/transform/objShorthand'>;
}
declare module 'lebab/lib/transform/template.js' {
  declare module.exports: $Exports<'lebab/lib/transform/template'>;
}
declare module 'lebab/lib/Transformer.js' {
  declare module.exports: $Exports<'lebab/lib/Transformer'>;
}
declare module 'lebab/lib/traverser.js' {
  declare module.exports: $Exports<'lebab/lib/traverser'>;
}
declare module 'lebab/lib/utils/copyComments.js' {
  declare module.exports: $Exports<'lebab/lib/utils/copyComments'>;
}
declare module 'lebab/lib/utils/destructuring.js' {
  declare module.exports: $Exports<'lebab/lib/utils/destructuring'>;
}
declare module 'lebab/lib/utils/functionType.js' {
  declare module.exports: $Exports<'lebab/lib/utils/functionType'>;
}
declare module 'lebab/lib/utils/Hierarchy.js' {
  declare module.exports: $Exports<'lebab/lib/utils/Hierarchy'>;
}
declare module 'lebab/lib/utils/isEqualAst.js' {
  declare module.exports: $Exports<'lebab/lib/utils/isEqualAst'>;
}
declare module 'lebab/lib/utils/isString.js' {
  declare module.exports: $Exports<'lebab/lib/utils/isString'>;
}
declare module 'lebab/lib/utils/matchAliasedForLoop.js' {
  declare module.exports: $Exports<'lebab/lib/utils/matchAliasedForLoop'>;
}
declare module 'lebab/lib/utils/matchesAst.js' {
  declare module.exports: $Exports<'lebab/lib/utils/matchesAst'>;
}
declare module 'lebab/lib/utils/multiReplaceStatement.js' {
  declare module.exports: $Exports<'lebab/lib/utils/multiReplaceStatement'>;
}
declare module 'lebab/lib/utils/variableType.js' {
  declare module.exports: $Exports<'lebab/lib/utils/variableType'>;
}
declare module 'lebab/lib/withScope.js' {
  declare module.exports: $Exports<'lebab/lib/withScope'>;
}
