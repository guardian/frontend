== 1.7.3 / 2013-06-20

* Removed use of array forEach, breaks in older browsers (Martin Hansen)
* sinon.deepEqual(new Date(0), new Date()) returns true (G.Serebryanskyi)

== 1.7.2 / 2013-05-08

* Sinon 1.7 has split calls out to a separate file. This caused some problems,
  so 1.7.2 ships with spyCall as part of spy.js like it used to be.

== 1.7.1 / 2013-05-07

* Fake XMLHttpRequest updated to call onerror and onsuccess callbacks, fixing
  jQuery 2.0 problems (Roman Potashow)
* Implement XMLHttpRequest progress event api (Marten Lienen)
* Added sinon.restore() (Jonny Reeves)
* Fix bug where throwing a string was handled incorrectly by Sinon (Brandon Heyer)
* Web workers support (Victor Costan)

== 1.7.0

* Failed release, see 1.7.1

== 1.6.0 / 2013-02-18
* Add methods to spyCall interface: callArgOn, callArgOnWith, yieldOn,
  yieldToOn (William Sears)
* sinon.createStubInstance creates a fully stubbed instance from a constructor
  (Shawn Krisman)
* resetBehavior resets fakes created by withArgs (Martin Sander)
* The fake server now logs to sinon.log, if set (Luis Cardoso)
* Cleaner npm package that also includes pkg/sinon.js and
  pkg/sinon-ie.js for cases where npm is used to install Sinon for
  browser usage (Domenic Denicola)
* Improved spy formatter %C output (Farid Neshat)
* clock.tick returns clock.now (Michael Jackson)
* Fixed issue #248 with callOrder assertion
  Did not fail if the last given spy was never called (Maximilian Antoni)
* Fixed issue with setResponseHeader for synchronous requests (goligo)
* Remove msSetImmediate; it only existed in IE10 previews (Domenic Denicola)
* Fix #231: not always picking up the latest calls to callsArgWith, etc.
  (Domenic Denicola)
* Fix failing anonymous mock expectations

== 1.5.2 / 2012-11-28
* Revert stub.reset changes that caused existing tests to fail.

== 1.5.1 / 2012-11-27
* Ensure window.Image can be stubbed. (Adrian Phinney)
* Fix spy() in IE 8 (Scott Andrews)
* Fix sinon base in IE 8 (Scott Andrews)
* Format arguments ouput when mock excpetation is not met (kbackowski)
* Calling spy.reset directly from stub.reset (Thomas Meyer)

== 1.5.0 / 2012-10-19
* Don't force "use strict" on Sinon consumers
* Don't assume objects have hasOwnProperties. Fixes problem with e.g.
  stubbing properties on process.env
* Preserve function length for spy (Maximilian Antoni)
* Add 'invokeCallback' alias for 'yield' on calls (Maximilian Antoni)
* Added matcher support for calledOn (Maximilian Antoni)
* Retain original expectation messages, for failed mocks under sinon.test
  (Giorgos Giannoutsos)
* Allow yields* and callsArg* to create sequences of calls. (Domenic Denicola)
* sinon.js can catch itself in endless loop while filling stub prototype
  with asynch methods (Jan Kopriva)

== 1.4.2 / 2012-07-11
* sinon.match for arrays (Maximilian Antoni)

== 1.4.1 / 2012-07-11
* Strengthen a Node.JS inference to avoid quirky behavior with Mocha
  (which provides a shim process object)

== 1.4.0 / 2012-07-09
* Argument matchers (Maximillian Antoni)
  sinon.match.{any, same, typeOf, instanceOf, has, hasOwn, defined, truthy,
  falsy} as well as typeOf shortcuts for boolean, number, string, object,
  function, array, regexp and date. The result of a call can be used with
  spy.calledWith.
* spy.returned now works with matchers and compares objects deeply.
* Matcher assertions: calledWithMatch, alwaysCalledWithMatch and
  neverCalledWithMatch
* calledWithNew and alwaysCalledWithNew for assert (Maximilian Antoni)
* Easier stubbed fluent interfaces: stub.returnsThis() (Glen Mailer)
* allow yields() and family to be used along with returns()/throws() and
  family (Glen Mailer)
* Async versions `callsArg*` and `yields*` for stubs (TEHEK)
* Format args when doing `spy.printf("%*")` (Domenic Denicola)
* Add notCalled property to spies
* Fix: spy.reset did not reset fakes created by spy.withArgs (Maximilian Antoni)
* Properly restore stubs when stubbing entire objects through the sandbox
  (Konrad Holowinski)
* Restore global methods properly - delete properties that where not own
  properties (Keith Cirkel)
* setTimeout and setInterval pass arguments (Rodion Vynnychenko)
* Timer callbacks that contain a clock.tick no longer fails (Wesley Waser)
* spy(undefined, "property") now throws
* Prevent multiple restore for fake timers (Kevin Decker)
* Fix toString format under Node (Kevin Decker)
* Mock expectations emit success and failure events (Kevin Decker)
* Development improvement: Use Buster.JS to test Sinon
* Fix bug where expect.atLeast failed when minimum calls where received
* Make fake server safe to load on node.js
* Add support for no args on .withArgs and .withExactArgs (Tek Nynja)
* Avoid hasOwnProperty for host objects

== 1.3.2 / 2012-03-11
* Stronger Node inference in sandbox
* Fixed issue with sinon.useFakeTimers() and Rhino.js 1.7R3
* Formatting brush-up
* FIX Internet Explorer misreporting the type of Function objects
  originating in an external window as "object" instead of "function".
* New methods stub.callsArgOn, stub.callsArgOnWith,
  stub.yieldsOn, stub.yieldsToOn
* Implemented
* Fixing `clearTimeout` to not throw when called for nonexistant IDs.
* Spys that are created using 'withArgs' now get initialized with previous
  calls to the original spy.
* Minor bug fixes and docs cleanup.

== 1.3.1 / 2012-01-04
* Fix bug in core sinon: isNode was used for both a variable and a function,
  causing load errors and lots of bugs. Should have never left the door.

== 1.3.0 / 2012-01-01
* Support using bare functions as fake server response handlers (< 1.3.0
  required URL and/or method matcher too)
* Log some internal errors to sinon.log (defaults to noop). Set sinon.log
  to your logging utility of choice for better feedback when.
* White-list fake XHRs: Allows some fake requests and some that fall through to
  the backend server (Tim Ruffles)
* Decide Date.now support at fake-time. Makes it possible to load something that
  polyfills Date.now after Sinon loaded and still have Date.now on fake Dates.
* Mirror properties on replaced function properties
* New methods: spy.yield(), spy.yieldTo(), spy.callArg() and spy.callArgWith()
  can be used to invoke callbacks passed to spies (while avoiding the mock-like
  upfront yields() and friends). invokeCallback is available as an alias for
  yield for people working with strict mode. (Maximilian Antoni)
* New properties: spy.firstCall, spy.secondCall, spy.thirdCall and spy.lastCall.
  (Maximilian Antoni)
* New method: stub.returnsArg(), causes stub to return one of its arguments.
  (Gavin Huang)
* Stubs now work for inherited methods. This was previously prohibited to avoid
  stubbing not-yet-implemented methods. (Felix Geisendörfer)
* server.respond() can now accept the same arguments as server.respondWith() for
  quick-and-dirty respondWith+respond. (Gavin Huang)
* Format objects with buster-format in the default bundle. Default to
  util.inspect on node unless buster-format is available (not a hard dependency,
  more like a 'preference').

* Bug fix: Make sure XHRs can complete even if onreadystatechange handler fails
* Bug fix: Mirror entire Date.prototype, including toUTCString when faking
* Bug fix: Default this object to global in exposed asserts
* Bug fix: sinon.test: use try/finally instead of catch and throw - preserves
  stack traces (Kevin Turner)
* Bug fix: Fake `setTimeout` now returns ids greater than 0. (Domenic Denicola)
* Bug fix: NPM install warning (Felix Geisendörfer)
* Bug fix: Fake timers no longer swallows exceptions (Felix Geisendörfer)
* Bug fix: Properly expose all needed asserts for node
* Bug fix: wrapMethod on window property (i.e. when stubbing/spying on global
  functions)
* Bug fix: Quote "yield" (Ben Hockey)
* Bug fix: callOrder works correctly when spies have been called multiple times

== 1.2.0 / 2011-09-27
* Bug fix: abort() switches state to DONE when OPENED and sent. Fix by
  Tristan Koch.
* Bug fix: Mootools uses MSXML2.XMLHTTP as objectId, which Sinon matched with
  different casing. Fix by Olmo Maldonado.
* Bug fix: When wrapping a non-owned property, restore now removes the wrapper
  instead of replacing it. Fix by Will Butler.
* Bug fix: Make it possibly to stub Array.prototype.push by not using that
  method directly inside Sinon.
* Bug fix: Don't assume that req.requestBody is a string in the fake server.
* Added spy.printf(format) to print a nicely formatted message with details
  about a spy.
* Garbage collection: removing fakes from collections when restoring the
  original methods. Fix by Tristan Koch.
* Add spy.calledWithNew to check if a function was used as a constructor
* Add spy.notCalledWith(), spy.neverCalledWith() and
  sinon.assert.neverCalledWith. By Max Antoni
* Publicly expose sinon.expectation.fail to allow tools to integrate with mock
  expectations.
* Fake XMLHttpRequests now support a minimal portion of the events API, making
  them work seamlessly with e.g. SproutCode (which uses
  xhr.addEventListener("readystatechange"). Partially by Sven Fuchs.

== 1.1.1 / 2011-05-17
* Fix broken mock verification in CommonJS when not including the full Sinon
  package.

== 1.1.0 / 2011-05-04
* The fake server now has a autoRespond method which allows it to respond to
  requests on the fly (asynchronously), making it a good fit for mockup
  development
* Stubs and spies now has a withArgs method. Using it allows you to create
  several spies/stubs for the same method, filtered by received arguments
* Stubs now has yields and yieldsTo methods for fuzzily invoking callbacks.
  They work like callsArgAt only by inferring what callback to invoke, and
  yieldsTo can invoke callbacks in object "options" arguments.
* Allow sandboxes/collections to stub any property so long as the object
  has the property as an own property
* Significantly improve error reporting from failed mock expecations. Now prints
  all met and unmet expectations with expected and received arguments
* Allow mock expectations to be consumed in any order
* Add pretty printing of all calls when assertions fail
* Fix bug: Stub exception message ended up as "undefined" (string) if not
  specified
* Pass capture groups in URLs to fakeServer function handlers
* Pass through return value from test function in testCase
* typeof require is not enough to assume node, also use typeof module
* Don't use Object.create in sinon.create. In the off chance that someone stubs
  it, sinon will fail mysteriously (Thanks to Espen Dalløkken)
* Catch exceptions when parsing DOM elements "on a hunch"
  When responding to XHRs, Sinon acts like most browsers and try to parse the
  response into responseXML if Content-Type indicates XML or HTML. However, it
  also does this if the type is not set. Obviously, this may misfire and
  should be caught.
* Fix fakeServer.respond() to not drop requests when they are queued during the
  processing of an existing queue. (Sven Fuchs)
* Clean up module loading in CommonJS environments (Node.js still the only
  tested such environment). No longer (temporarily) modifies require.paths,
  always loads all modules.

== 1.0.2 / 2011-02-22
* Fix JSON bug in package.json
* Sandbox no longer tries to use a fake server if config says so, but
  server is not loaded

== 1.0.1 / 2010-12-20
* Make sure sinon.sandbox is exposed in node.js (fix by Gord Tanner)

== 1.0.0 / 2010-12-08
* Switched indentation from 2 to 4 spaces :)
* Node.js compatibility improvements
* Remove magic booleans from sinon.assert.expose, replace with option object
* Put QUnit adapter in it's own repository
* Update build script to build standalone timers and server files
* Breaking change: thisObj -> thisValue
  Change brings consistency to the code-base, always use thisValue
* Add sinon.assert.pass callback for successful assertions
* Extract sandbox configuration from sinon.test

  Refactored sinon.test to not do all the heavy lifting in creating sandbox
  objects from sinon.config. Now sinon.sandbox.create accepts an optional
  configuration that can be retrieved through sinon.getConfig({ ... }) - or, to
  match previous behavior, through sinon.getConfig(sinon.config);

  The default configuration now lives in sinon.defaultConfig rather than the
  previous sinon.test.

  This change enables external tools, such as test framework adapters, to easily
  create configurable sandboxes without going through sinon.test
* Rewrite sinon.clock.tick to fix bug and make implementation clearer
* Test config load correct files
* Make timers and XHR truly standalone by splitting the IE work-around in two files
* Don't fail when comparing DOM elements in sinon.deepEqual (used in calledWith(...))
* Should mirror properties on Date when faking it
* Added and updated configuration for both JsLint and JavaScript lint
* [August Lilleaas] The build script can optionally build a file without the
  version name in it, by passing 'plain', i.e. './build plain'.

  Useful when using the build script to build and use sinon programatically, so
  one can 'cp path/to/sinon/pkg/sinon.js my/scripts/'
* [August Lilleaas] Checking and warning if we got a load error and rubygems
  isn't present.
* [August Lilleaas] Updating build script to be runnable from any
  directory. Current working directory doesn't have to be repo root.

== 0.8.0 / 2010-10-30
* sinon.wrapMethod no longer accepts faking already faked methods
* sinon-qunit 'plugin'
* sinon.test / sinon.config can now expose the sandbox object

== 0.7.2 / 2010-10-25
* Add sinon.sandbox.create back in
* Fix bug where clock.tick would fire timeouts in intervals when
  setInterval was also called

== 0.7.1 / 2010-10-16
* The fake server will now match paths against full URLs, meaning that
  server.respondWith("/", "OK"); will match requests for
  "http://currentHost/".
* Improved toString method for spies and stubs which leads to more
  precise error messages from sinon.assert.*

== 0.7.0 / 2010-09-19
* sinon.useFakeTimers now fakes the Date constructor by default
* sinon.testCase now fakes XHR and timers by default
* sinon.config controls the behavior of sinon.testCase
* Fixed bug in clock.tick - now fires timers in correct order
* Added the ability to tick a clock string for longer ticks.
  Passing a number causes the clock to tick the specified amount of
  milliseconds, passing a string like "12:32" ticks 12 minutes and 32
  seconds.
* calledBefore and calledAfter for individual calls
* New assertions
  sinon.assert.notCalled
  sinon.assert.calledOnce
  sinon.assert.calledTwice
  sinon.assert.calledThrice
* sinon.test now throws if passed anything other than a function
* sinon.testCase now throws if passed anything other than an object
* sinon.{spy,stub}(obj, method) now throws if the property is not an
  existing function - helps avoid perpetuating typo bugs
* Vastly improved error messages from assertions
* Spies/stubs/expectations can have their names resolved in many cases
* Removed feature where sinon.testCase allowed for nested test cases
  (does not belong in Sinon.JS)
* Organizational change: src/ becomes lib/ Helps npm compatibility
* Thanks to Cory Flanigan for help on npm compatibility

== 0.6.2 / 2010-08-12
* Fixed another bug in sinon.fakeServerWithClock where consecutive
  respond() calls did not trigger timeouts.

== 0.6.1 / 2010-08-12
* Fixed a bug in sinon.fakeServerWithClock where the clock was ticked
  before the server had responded to all requests, resulting in
  objects not having been responded to by the time the timeout ran.

== 0.6.0 / 2010-08-10
* FakeXMLHttpRequest
* sinon.useFakeXMLHttpRequest
* sinon.fakeServer
* sinon.fakeServerWithClock
* Improved fake timers implementation, made them work properly in IE 6-8
* Improved sinon.sandbox
  * Added useFakeServer
  * Added inject method
* Improved sinon.test method
  * Made configuration aware
  * Now uses sinon.sandbox in place of sinon.collection
* Changed default configuration for sinon.test, breaking compatibility
  with 0.5.0 - can be changed through sinon.config

== 0.5.0 / 2010-06-09
* Initial release
* Spies, stubs, mocks
* Assertions
* collections, test, testCase
* Fake timers (half-baked)
