# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET           /_healthcheck              controllers.HealthCheck.healthcheck()

# authentication endpoints
GET           /login                     controllers.OAuthLoginController.login
POST          /login                     controllers.OAuthLoginController.loginAction
GET           /oauth2callback            controllers.OAuthLoginController.oauth2Callback
GET           /logout                    controllers.OAuthLoginController.logout

# static files
GET           /assets/*file              controllers.UncachedAssets.at(file)

##################### NOTE ############################
#all endpoints below this line should be authenticated#
#######################################################

# Fronts
GET           /                          controllers.FaciaToolController.priorities()
GET           /editorial                 controllers.FaciaToolController.collectionEditor(priority="editorial")
GET           /commercial                controllers.FaciaToolController.collectionEditor(priority="commercial")
GET           /training                  controllers.FaciaToolController.collectionEditor(priority="training")

GET           /editorial/config          controllers.FaciaToolController.configEditor(priority="editorial")
GET           /commercial/config         controllers.FaciaToolController.configEditor(priority="commercial")
GET           /training/config           controllers.FaciaToolController.configEditor(priority="training")

GET           /publish-all               controllers.ContentApiPressController.publishAll()
GET           /publish-all/comet         controllers.ContentApiPressController.publishAllStream()

POST          /collection/publish/*collectionId    controllers.FaciaToolController.publishCollection(collectionId)
POST          /collection/discard/*collectionId    controllers.FaciaToolController.discardCollection(collectionId)

POST          /press/live/*path          controllers.FaciaToolController.pressLivePath(path)
POST          /press/draft/*path         controllers.FaciaToolController.pressDraftPath(path)

GET           /front/lastmodified/*path  controllers.FaciaToolController.getLastModified(path)

GET           /collection-put/*collectionId controllers.FaciaToolController.generatePutForCollectionId(collectionId)
GET           /collection/*collectionId     controllers.FaciaToolController.getCollection(collectionId)
POST          /edits                        controllers.FaciaToolController.collectionEdits
GET           /collection                   controllers.FaciaToolController.listCollections
GET           /config                       controllers.FaciaToolController.getConfig

POST          /treats/*collectionId      controllers.FaciaToolController.treatEdits(collectionId)

# endpoints for proxying https
GET           /switches                  controllers.SwitchesProxy.getSwitches()
GET           /api/proxy/*path           controllers.FaciaContentApiProxy.capi(path)
GET           /http/proxy/*url           controllers.FaciaContentApiProxy.http(url)
GET           /json/proxy/*absUrl        controllers.FaciaContentApiProxy.json(absUrl)
GET           /ophan/*path               controllers.FaciaContentApiProxy.ophan(path)

# thumbnails
GET           /thumbnails/*id.svg        controllers.ThumbnailController.container(id)

# Updating config

POST          /config/fronts             controllers.FrontController.create()
POST          /config/fronts/*path       controllers.FrontController.update(path)

POST          /config/collections                  controllers.CollectionController.create()
POST          /config/collections/*collectionId    controllers.CollectionController.update(collectionId)

# Depend on frontend project
GET           /frontend/config                  controllers.FrontendDependentController.config()

# Stories visible
POST          /stories-visible/*containerType   controllers.StoriesVisibleController.storiesVisible(containerType)

#Vanity URL
GET           /breaking-news                    controllers.VanityRedirects.breakingnews
