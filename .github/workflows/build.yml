name: 'Build'

on:
  pull_request:
  push: # Do not rely on `push` for PR CI - see https://github.com/guardian/mobile-apps-api/pull/2760
    branches:
      - main # Optimal for GHA workflow caching - see https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows#restrictions-for-accessing-a-cache

permissions:
  id-token: write
  contents: read
  pull-requests: write # Required for riff-raff action

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  build-client:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - run: corepack enable

      - uses: actions/setup-node@v4
        with:
          cache: yarn
          node-version-file: .nvmrc

      - run: make install
      - run: make validate
      - run: make test
      - run: make compile
      # zip compiled output in static/hash and upload so it can be used in the riff-raff deploy
      - name: zip frontend-client
        run: |
          mkdir -p /tmp
          zip -r /tmp/frontend-client.zip static/hash
      # upload the zip file using the artifact upload action
      - name: upload frontend-client
        uses: actions/upload-artifact@v4
        with:
          name: frontend-client-zip
          path: /tmp/frontend-client.zip
          if-no-files-found: error

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: corretto
          cache: sbt
          java-version: 11

      - name: Test, compile
        # Australia/Sydney  -because it is too easy for devs to forget about timezones
        run: |
          java \
          -Xmx6144M \
          -XX:ReservedCodeCacheSize=128m \
          -Dsbt.log.noformat=true \
          -XX:+UseParallelGC \
          -DSTAGE=DEV \
          -DAPP_SECRET="fake_secret" \
          -Duser.timezone=Australia/Sydney \
          -jar ./bin/sbt-launch.jar clean compile assets scalafmtCheckAll test

      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: 'test-results/**/TEST-*.xml'
        if: always()

  publish:
    needs: [build-client, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: corretto
          cache: sbt
          java-version: 11

      - name: Prepare frontend-client output folder
        run: |
          mkdir -p /tmp
          mkdir -p static/hash

      - name: Download frontend-client
        uses: actions/download-artifact@v4
        with:
          name: frontend-client-zip
          path: /tmp

      - name: Unzip frontend-client
        run: |
          unzip -o /tmp/frontend-client.zip -d static/hash

      - name: Package
        # Australia/Sydney  -because it is too easy for devs to forget about timezones
        run: |
          java \
          -Xmx6144M \
          -XX:ReservedCodeCacheSize=128m \
          -Dsbt.log.noformat=true \
          -XX:+UseParallelGC \
          -DAPP_SECRET="fake_secret" \
          -Duser.timezone=Australia/Sydney \
          -jar ./bin/sbt-launch.jar compile Universal/packageBin

      - uses: guardian/actions-riff-raff@v4.1.2
        env:
          GU_RIFF_RAFF_ROLE_ARN: ${{ secrets.GU_RIFF_RAFF_ROLE_ARN }}
        if: ${{ env.GU_RIFF_RAFF_ROLE_ARN }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          roleArn: ${{ secrets.GU_RIFF_RAFF_ROLE_ARN }}
          projectName: dotcom:frontend-all
          configPath: riff-raff.yaml
          contentDirectories: |
            frontend-static:
              - static/hash
            admin:
              - admin/target/universal/admin.zip
            applications:
              - applications/target/universal/applications.zip
            archive:
              - archive/target/universal/archive.zip
            article:
              - article/target/universal/article.zip
            commercial:
              - commercial/target/universal/commercial.zip
            discussion:
              - discussion/target/universal/discussion.zip
            facia:
              - facia/target/universal/facia.zip
            facia-press:
              - facia-press/target/universal/facia-press.zip
            identity:
              - identity/target/universal/identity.zip
            onward:
              - onward/target/universal/onward.zip
            preview:
              - preview/target/universal/preview.zip
            rss:
              - rss/target/universal/rss.zip
            sport:
              - sport/target/universal/sport.zip
