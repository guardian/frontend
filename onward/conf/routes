# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# For dev machines
GET        /assets/*path                              dev.DevAssetsController.at(path)

GET        /_healthcheck                              controllers.HealthCheck.healthCheck()

# Onward public endpoints

# Weather
GET        /weather/city/:id.json                     weather.controllers.WeatherController.forCity(id)
GET        /weather/city.json                         weather.controllers.LocationsController.whatIsMyCity()
GET        /weather/locations                         weather.controllers.LocationsController.findCity(query: String)
GET        /weather/forecast/:id.json                 weather.controllers.WeatherController.forecastForCityId(id)

GET        /weatherapi/city/:id.json                  weather.controllers.WeatherController.forCity(id)
GET        /weatherapi/city.json                      weather.controllers.LocationsController.whatIsMyCity()
GET        /weatherapi/locations                      weather.controllers.LocationsController.findCity(query: String)
GET        /weatherapi/forecast/:id.json              weather.controllers.WeatherController.forecastForCityId(id)

# Weather - DCR
GET        /weather                                   weather.controllers.WeatherController.theWeather()

# Most Read
GET        /most-read-facebook.json                   controllers.MostViewedSocialController.renderMostViewed(socialContext: String = "facebook")
GET        /most-read-twitter.json                    controllers.MostViewedSocialController.renderMostViewed(socialContext: String = "twitter")
GET        /most-read.json                            controllers.MostPopularController.render(path = "")
GET        /most-read/*path.json                      controllers.MostPopularController.render(path)
GET        /most-read-geo.json                        controllers.MostPopularController.renderPopularGeo()
GET        /most-read-day.json                        controllers.MostPopularController.renderPopularDay(countryCode)
# Deeply read experiment
GET        /most-read-with-deeply-read.json          controllers.MostPopularController.renderWithDeeplyRead()

GET        /top-stories.json                          controllers.TopStoriesController.renderTopStories()
GET        /top-stories/trails.json                   controllers.TopStoriesController.renderTrails()

GET        /related/*path.json                        controllers.RelatedController.render(path)

GET        /popular-in-tag/*tag.json                  controllers.PopularInTag.render(tag)

GET        /preference/edition/:edition               controllers.ChangeEditionController.render(edition)

GET        /:mediaType/section/:sectionId/*seriesId.json   controllers.MediaInSectionController.renderSectionMediaWithSeries(mediaType, sectionId, seriesId)
GET        /:mediaType/section/:sectionId.json             controllers.MediaInSectionController.renderSectionMedia(mediaType, sectionId)
GET        /video/most-viewed.json                    controllers.MostViewedVideoController.renderMostViewed()
GET        /video/in-series/*series.json              controllers.MostViewedVideoController.renderInSeries(series: String)
GET        /audio/most-viewed.json                    controllers.MostViewedAudioController.renderMostViewed()
GET        /podcast/most-viewed.json                  controllers.MostViewedAudioController.renderMostViewedPodcast()
GET        /gallery/most-viewed.json                  controllers.MostViewedGalleryController.renderMostViewed()

GET        /embed/card/*path.json                     controllers.RichLinkController.render(path)
GET        /embed/card/*path                          controllers.RichLinkController.renderHtml(path)
GET        /embed/contentcard/*path.json              controllers.RecommendedContentCardController.render(path)
GET        /embed/contentcard/*path                   controllers.RecommendedContentCardController.renderHtml(path)


# For tests
GET        /most-read/*path                           controllers.MostPopularController.renderHtml(path)
GET        /related/*path                             controllers.RelatedController.renderHtml(path)
GET        /top-stories                               controllers.TopStoriesController.renderTopStoriesHtml()
GET        /gallery/most-viewed                       controllers.MostViewedGalleryController.renderMostViewedHtml()

# Experimental
GET        /cards/opengraph/*path.json                controllers.CardController.opengraph(path)
GET        /tagged.json                               controllers.TaggedContentController.renderJson(tag: String)
GET        /audio/series/*path.json                   controllers.SeriesController.renderPodcastEpisodes(path)
GET        /series/*path.json                         controllers.SeriesController.renderSeriesStories(path)

# Business data
GET        /business-data/stocks.json                 controllers.StocksController.stocks

# DCR
GET        /story-package/*path.json                  controllers.StoryPackageController.render(path)
GET        /nav/:editionId.json                       controllers.NavigationController.renderDCRNav(editionId: String)

# AMP
GET        /most-read-mf2.json                        controllers.MostPopularController.renderPopularMicroformat2()
GET        /related-mf2/*path.json                    controllers.RelatedController.renderMf2(path)
GET        /series-mf2/*path.json                     controllers.SeriesController.renderMf2SeriesStories(path)
GET        /editionalised-nav.json                    controllers.NavigationController.renderAmpNav()
GET        /story-package-mf2/*path.json              controllers.StoryPackageController.renderMF2(path)
