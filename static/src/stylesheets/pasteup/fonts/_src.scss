@function str-replace($string, $search, $replace: '') {
    $index: str-index($string, $search);
    @while $index {
        $string: str-slice($string, 1, $index - 1) + $replace + str-slice($string, $index + 1);
        $index: str-index($string, $search);
    }
    @return $string;
}

@function str-capitalise($string) {
    $string: $string + unquote(''); // coerce argument into definite String
    @return to-upper-case(str-slice($string, 0, 1)) + str-slice($string, 2);
}

@function filename($typeface, $weight, $style) {
    $style: if($style == normal, '', str-capitalise($style));
    $weight: str-capitalise($weight);
    @return '#{$typeface}-#{$weight}#{$style}';
}

@mixin font-face($font-family, $kerning: 'on', $hinting: 'off') {

    // increment this when releasing a new version of the fonts
    $font-version: '1.0.0';

    // defines the versions of the different typefaces used on the site
    $font-families: (
        'Guardian Text Egyptian Web': (
            (weight: 'regular', style: 'normal', charset: 'original'),
            (weight: 'regular', style: 'italic', charset: 'latin1'),
            (weight: 'medium', style: 'normal', charset: 'latin1', use-as: bold)
        ),
        'Guardian Egyptian Web': (
            (weight: 'light', style: 'normal', charset: 'latin1'),
            (weight: 'regular', style: 'normal', charset: 'latin1'),
            (weight: 'medium', style: 'normal', charset: 'latin1'),
            (weight: 'semibold', style: 'normal', charset: 'ascii', use-as: ultrablack)
        ),
        'Guardian Text Sans Web': (
            (weight: 'regular', style: 'normal', charset: 'original'),
            (weight: 'regular', style: 'italic', charset: 'latin1'),
            (weight: 'medium', style: 'normal', charset: 'original', use-as: bold)
        ),
        'Guardian Sans Web': (
            (weight: 'regular', style: 'normal', charset: 'latin1'), // comma forces it into a map
        )
    );

    // used to map filename weights to CSS weight
    $css-weights: (
        'thin':       100,
        'light':      200,
        'book':       300,
        'regular':    400,
        'medium':     500,
        'semibold':   600,
        'bold':       700,
        'black':      800,
        'ultrablack': 900
    );

    $typeface: str-replace($font-family, ' ', '');

    @each $variant in map-get($font-families, $font-family) {
        $charset: map-get($variant, charset);
        $filename: filename($typeface, map-get($variant, weight), map-get($variant, style));
        $url: "//pasteup.guim.co.uk/fonts/#{$font-version}/hinting-#{$hinting}/kerning-#{$kerning}/#{$charset}/#{$typeface}/#{$filename}";

        $css-weight: map-get($css-weights, if(map-has-key($variant, use-as),
            map-get($variant, use-as),
            map-get($variant, weight)
        ));

        @include font-face-for($font-family, $url, unquote(map-get($variant, style)), $css-weight, $filename);
    };
}

@mixin font-face-for($font-family, $url, $style, $weight, $filename) {
    @at-root {
        @font-face {
            font-family: $font-family;
            src: url('#{$url}.eot'); // IE9 Compat Modes
            src: url('#{$url}.eot?#iefix') format('embedded-opentype'), // IE6-IE8
                 url('#{$url}.woff2') format('woff2'), // Very Modern Browsers
                 url('#{$url}.woff') format('woff'), // Modern Browsers
                 url('#{$url}.ttf') format('truetype'), // Safari, Android, iOS
                 url('#{$url}.svg##{$filename}') format('svg'); // Legacy iOS
            font-weight: $weight;
            font-style: $style;
            font-stretch: normal;
        }
    }
}
