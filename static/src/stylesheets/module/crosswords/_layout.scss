@function xword-grid-dimensions($cells) {
    @return $cells * ($xword-cell-width + $xword-border-width) + $xword-border-width;
}

@each $xword, $cells in $xword-grid-sizes {
    $size: xword-grid-dimensions($cells);

    .crossword__container--#{$xword} {
        @include mq(tablet) {
            padding-left: $size;

            &.crossword__container--accessible {
                padding-left: 0;
            }
        }

        .crossword__container__game {
            @include mq(tablet) {
                margin-left: 0 - $size;
            }
        }

        // Because the parent is floated, it has no dimensions, so we must
        // define dimensions for the grid. (SVGs use viewBox which require
        // the parent to have dimensions)
        .crossword__container__grid-wrapper {
            width: 100%;
            height: $size;

            @include mq(tablet) {
                width: $size;
            }
        }

        .crossword__controls {
            @include mq(tablet) {
                margin-left: 0 - $size;
                width: $size;
            }
        }

        .crossword__hidden-input-wrapper {
            width: percentage(1 / $cells);
            height: percentage(1 / $cells);
        }
    }
}


.crossword__container {
    clear: both;
    position: relative;
    margin-top: $gs-baseline;
}

.crossword__spacer--ad {
    @include mq(wide) {
        margin-right: gs-span(4) + $gs-baseline;
        min-height: 600px + $mpu-ad-label-height;
        margin-bottom: $gs-baseline;
    }
}

.crossword-banner {
    clear: both;
    margin-top: $gs-baseline;
    // 90px is the height of a leaderboard
    height: 90px + $mpu-ad-label-height + $gs-row-height / 2;

    @include mq($until: desktop) {
        margin-left: -$gs-gutter;
        margin-right: -$gs-gutter;
    }
}

.crossword__controls {
    margin-top: $gs-baseline;
    float: left;
    clear: both;
}

// scrollable clues - only on tablets not in accessible view
.crossword__container--react {
    & .crossword__clues--wrapper,
    & .crossword__clues {
        @include mq($from: tablet, $until: leftCol) {
            height: xword-grid-dimensions(15) + ($gs-baseline * 10);
        }
    }

    @include mq($from: tablet, $until: leftCol) {
        & .crossword__clues {
            position: relative;
            overflow-y: scroll;
            -webkit-overflow-scrolling: touch;
        }
    }
}

.crossword__clues__gradient {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 120px;
    background: linear-gradient(to bottom, rgba(255, 255, 255, 0), #ffffff);
    display: none;
    pointer-events: none;

    @include mq($from: tablet, $until: leftCol) {
        display: block;

        .hide-gradient & {
            display: none;
        }
    }
}

.crossword__clues {
    width: 100%;
    clear: both;

    @include mq(tablet) {
        clear: none;
        padding-left: $gs-gutter;
        box-sizing: border-box;

        noscript & {
            width: 85%;
        }

        .crossword__container--accessible & {
            display: table;
            table-layout: fixed;
            width: initial;
        }
    }

    @include mq(leftCol) {
        display: table;
        table-layout: fixed;
        height: auto;
        background: none;
    }
}

.crossword__accessible-row-data-wrapper {
    float: left;
}

.crossword__clues--across {
    @include mq(desktop) {
        display: table-cell;
        padding-right: $gs-gutter / 2;
    }
}

.crossword__clues--down {
    @include mq(desktop) {
        display: table-cell;
        padding-left: $gs-gutter / 2;
    }
}

.crossword__links-related {
    @include mq(leftCol) {
        top: $gs-baseline * -2;
        padding-bottom: $gs-baseline / 3;
    }

    position: relative;
    top: $gs-baseline * -1;
    font-family: $f-sans-serif-text;
    font-size: 15px;
}

.js-crossword-link {
    display: none;
}

.crossword__instructions {
    margin: $gs-baseline 0;
}

.content__dateline-crossword {
    min-height: 0px;
    display: inline;
    border-top: 0;
}

.crossword__meta {
    .crossword__links & {
        border-top: 1px dotted $brightness-86;
        @include mq($from: leftCol) {
            display: none;
        }
    }

    .content__labels--crossword & {
        @include mq(mobile, $until: leftCol) {
            display: none;
        }
    }
}
