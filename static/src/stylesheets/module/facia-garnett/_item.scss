$fc-item-gutter: $gs-gutter / 4;

/* Garnett items
   ==========================================================================
*/

@mixin fs-headline-quote($level) {
    .fc-item__title--quoted .inline-garnett-quote__svg {
        height: get-font-size(headline, $level);
        width: get-font-size(headline, $level) * .54;
        margin-right: get-font-size(headline, $level) * .5;
        transform: translateY(-1px);
    }
}

@mixin fc-item--horizontal($media-width, $media-align: right) {

    .fc-item__image-container {
        box-sizing: border-box;
        padding-left: $gs-gutter * .25;
    }

    // IE10/11 ignore boxsizing on flex-basis'd element.
    // Option is extra wrapping div or this slightly overblow selector.
    .fc-item__content {
        position: relative;

        > * {
            box-sizing: border-box;
            padding-right: $gs-gutter * .25;
        }
    }

    .fc-item__container {
        flex-wrap: wrap;
        @if $media-align == right {
            flex-direction: row-reverse;
        } @else {
            flex-direction: row;
        }
    }

    .fc-item__media-wrapper, .fc-item__video-fallback {
        flex-basis: $media-width;
    }

    .fc-item__content {
        flex-basis: (100% - $media-width);
        // DAMN YOU IE10/11 FLEXWRAP BOX SIZING BUG
        max-width: (100% - $media-width);
    }

    .fc-item__footer--horizontal {
        flex-basis: 100%;
    }

    &.fc-item--has-no-image .fc-item__content {
        flex-basis: 100%;
        max-width: 100%;
        padding-right: gs-span(3);
    }
}

@include fs-headline-quote(2);

.fc-item {
    @include mq($until: tablet) {
        width: 100%;
        padding-left: $fc-item-gutter * 2;
        padding-right: $fc-item-gutter * 2;
        box-sizing: border-box;
    }

    @include mq(tablet) {
        flex: 1 1 auto;
        display: flex;
        margin-left: $fc-item-gutter * 2;
        margin-right: $fc-item-gutter * 2;
    }

    a {
        color: inherit;
    }

    .u-faux-block-link & a,
    .u-faux-block-link & abbr[title],
    .u-faux-block-link__promote {
        &.fc-item__link {
            z-index: 0;
        }

        @include mq($until: desktop) {
            z-index: initial;
        }
    }

    .u-faux-block-link--hover,
    .fc-item__image-container {
        background-color: $brightness-93;

        .fc-slice--nav-list--media & {
            background-color: inherit;
        }
    }

    .u-faux-block-link--hover {
        .youtube-media-atom,
        .fc-item__image-container {
            background-color: #000000;
            opacity: .9;
        }

        .u-faux-block-link__cta {
            text-decoration: none;
        }
    }
}

.fc-item__container {
    flex: 1 1 auto;
    display: flex;
    flex-direction: column;
    position: relative;
    width: 100%;

    // fix longwords breaking layouts from tablet breakpoint
    @include mq($from: tablet) {
        width: 0;
    }

    &:before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 1px;
        z-index: 2;
    }
}

// Wraps all media elements
.fc-item__media-wrapper {
    box-sizing: border-box;
}

// Wraps all non-media content
.fc-item__content {
    box-sizing: border-box;
    flex: 1 1 auto;
    display: flex;
    flex-direction: column;
    padding-left: $fc-item-gutter;
    padding-right: $fc-item-gutter;
}

.fc-item__header,
.video-overlay__headline,
.item__title,
.rich-link__header {
    @include fs-headline(3);
    @include fs-headline-quote(3);

    font-weight: 500;
    padding-bottom: .5em;

    .fc-item--has-boosted-title & {
        @include fs-headline(4, true);
        @include fs-headline-quote(4);
    }
}

.fc-item__title,
.fc-item__byline,
.fc-item__kicker,
.rich-link__byline,
.rich-link__title,
.rich-link__kicker {
    font: inherit;
    line-height: inherit;
}

.fc-item__title {
    padding-top: $gs-baseline/12;
    padding-bottom: $gs-baseline/6;
    word-wrap: break-word;
    overflow: hidden;
    margin-bottom: 0;
}

.fc-sublink__kicker,
.rich-link__kicker {
    &:hover:after {
        text-decoration: none;
    }
}

.fc-item__header {
    flex: 1 1 auto;
    font-weight: 400;
}

.fc-item__kicker {
    position: relative;
    font-weight: 700;

    &:after {
        content: '/';
        display: inline-block;
        font-weight: 900;
        margin-left: 4px;
    }
}

.fc-item__byline {
    margin-bottom: 0;
    font-style: italic;
    letter-spacing: .2px;
    //This is to compensate for the line height of the headline
    margin-top: -2px;
}

.fc-item__standfirst-wrapper {
    display: flex;
    flex-direction: row;
    padding-bottom: 0;

    &.fc-item__standfirst-wrapper--timestamp {
        flex-direction: column;

        .fc-item__meta {
            width: 100%;
            flex-direction: row;
        }

        .fc-item__timestamp {
            flex: 1;
        }

        .fc-item__standfirst {
            padding-bottom: $gs-gutter * .25;
        }
    }
}

.fc-item__standfirst {
    @include fs-bodyCopy(1);
    color: $brightness-46;
    display: none;
    flex: 1 1 auto;
    padding-right: $gs-gutter * .25;
    padding-bottom: $gs-baseline / 2;

    .fc-item--has-boosted-title & {
        display: none !important;
    }
}

.fc-item__link {
    &:hover,
    &:focus {
        text-decoration: none;
    }
}

// Liveblog blocks
$block-height: 58px;

.fc-item__liveblog-blocks {
    display: none;
}

@include mq(desktop) {
    .fc-item__liveblog-blocks {
        display: block;
        box-sizing: content-box !important;
        height: $block-height;
        overflow: hidden;
    }
}

.fc-item__liveblog-blocks__inner {
    transition: transform .5s ease-in;
}

.fc-item__liveblog-blocks__inner--offset {
    transform: translate3d(0, $block-height * -1, 0);
}

.fc-item__liveblog-block {
    box-sizing: border-box;
    display: block;
    height: $block-height;
}

.fc-item__liveblog-block:hover {
    text-decoration: none;
}

.fc-item__liveblog-block__text {
    @include fs-headline(1);
    box-sizing: border-box;
    position: relative;
    overflow: hidden;
    line-height: 1rem;
    color: mix(#ffffff, $news-dark, 92%);
    max-height: $block-height;
    padding: $gs-baseline/4 $gs-baseline/2;
    border-top: 1px solid mix(#ffffff, $news-dark, 50%);
    border-bottom: 4px solid #cc2b12;
    background-color: $news-main;
}

.fc-item__liveblog-block__text:after {
    @include fs-headline(5);
    content: '...';
    position: absolute;
    bottom: 0;
    right: 0;
    font-size: 30px;
    line-height: $gs-baseline;
    color: mix(#ffffff, $news-dark, 92%);
    height: 18px;
    padding-right: 8px;
    background-color: $news-main;
    box-shadow: -5px 0 5px -2px $news-main;
}

.fc-item__liveblog-block__time {
    @include ellipsis();
    font-weight: bold;
    color: #ffffff;
}

.fc-item__meta {
    @include fs-textSans(1);
    color: $brightness-46;
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    margin-left: auto;

    .inline-icon {
        fill: $brightness-46;
    }

    a {
        // make sure meta links always clickable,
        // even on mobile/tablet
        z-index: 1 !important;
    }
}

// reserve space for comment count on commentable card
.fc-item--is-commentable:not(.fc-item--type-comment) .fc-item__meta {
    min-height: 17px; // 17px = 14px height + 3px margin-top of inline-icon
    min-width: calc(3ch + 16px); // 16px = 14px height + 2px padding-right of inline-icon

    .fc-trail__count--commentcount {
        display: flex;
        flex-direction: row;

        &::before {
            content: '';
            display: block;
            flex-grow: 1;
            height: 100%;
        }
    }
}



.fc-item__container > .fc-item__meta {
    display: none;
}

.fc-item__timestamp,
.fc-trail__count {
    display: flex;

    .inline-icon {
        padding-right: 2px;
    }
}

.fc-item__timestamp .inline-icon {
    height: 11px;
    width: 11px;
    margin-top: 1px;

    svg {
        height: 11px;
        width: 11px;
    }
}

.fc-trail__count .inline-icon {
    height: 14px;
    width: 14px;
    margin-top: 3px;

    svg {
        height: 14px;
        width: 14px;
    }
}

.fc-item__footer--horizontal {
    display: none;
}

.fc-item--has-cutout {
    .fc-item__media-wrapper {
        // We never want to show the media and the cutout at the same time, hence the important
        display: none !important;
    }

    .fc-item__content {
        position: relative;
        overflow: hidden;
    }

    .fc-item__avatar {
        position: absolute;
        right: 0;
        bottom: 0;
    }

    .fc-item__avatar__media {
        position: absolute;
        bottom: 0;
    }
}

.fc-item__timestamp {
    white-space: nowrap;
}

.fc-item {
    .fc-item__media-wrapper,
    .fc-item__header
    {
        .fc-item__stars {
            background-color: $highlight-main;
            display: inline-block;
            line-height: 0;
            padding: $gs-baseline / 4;
            margin-top: $gs-baseline / 6;
        }

        .inline-star {
            display: inline-block;
            width: .65em;

            @include mq($from: desktop) {
                width: 1em;
            }

            svg {
                stroke: $brightness-7;
                fill: transparent;
                height: .75em;
                width: .75em;

                @include mq($from: desktop) {
                    height: 1em;
                    width: 1em;
                }
            }

            &.star__item--golden {
                svg {
                    fill: $brightness-7;
                    stroke: none;
                }
            }
        }
    }

    //Specific card type styling overides
    .fc-item__media-wrapper {
        position: relative;
        .fc-item__stars {
            position: absolute;
            z-index: 10;
            bottom: 0;
        }
    }

    &.fc-item--list-media-tablet,
    &.fc-item--list-mobile
    {
        .inline-star {
            width: .65em;

            svg {
                stroke: $brightness-7;
                fill: transparent;
                height: .75em;
                width: .75em;
            }
        }
    }

    &.fc-item--has-image {
        .fc-item__header {
            .fc-item__stars {
                display: none;
            }
        }
    }

    &.fc-item--list-mobile {
        .fc-item__header {
            .fc-item__stars {
                display: inline-block;
                @include mq($from: tablet) {
                    display: none;
                }
            }
        }
    }

}

//Removes the space caused by the comment count
.fc-item--list-mobile.fc-item--is-commentable {
    .fc-item__content--has-stars {
        .fc-item__header {
            margin-bottom: -$gs-gutter;

            @include mq($from: tablet) {
                margin-bottom: auto;

            }
        }
    }
}

.fc-item__slideshow {
    picture {
        @include mq($until: tablet) {
            &:nth-child(1n+2) img {
                display: none;
            }
        }
    }

    img {
        @include mq(tablet) {
            animation-timing-function: linear;
            animation-iteration-count: infinite;
            animation-direction: normal;
            opacity: 0;
        }
    }
}


@for $i from 2 through 5 {
    $hangTime: 4;
    $fadeTime: 1;
    $totalLoopTime: $i * ($hangTime + $fadeTime);
    @keyframes fc-item__slideshow--#{$i} {
        0% {
            opacity: 0;
        }
        #{(100% / $totalLoopTime) * $fadeTime} {
            opacity: 1;
        }
        #{(100% / $totalLoopTime) * ($fadeTime + $hangTime)} {
            opacity: 1;
        }
        #{(100% / $totalLoopTime) * ($fadeTime + $hangTime + $fadeTime)} {
            opacity: 0;
        }
    }
    @include mq(tablet) {
        .fc-item__slideshow--#{$i} {
            img {
                animation-duration: #{$totalLoopTime}s;
                animation-name: fc-item__slideshow--#{$i};
            }

            @for $j from 2 through $i {
                picture:nth-child(#{$j}) {
                    img {
                        animation-delay: #{($totalLoopTime / $i) * ($j - 1)}s;
                    }
                }
            }
        }
    }
}
