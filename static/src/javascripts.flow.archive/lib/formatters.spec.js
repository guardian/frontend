/**
 * DO NOT EDIT THIS FILE
 *
 * It is not used to to build anything.
 *
 * It's just a record of the old flow types.
 *
 * Use it as a guide when converting
 * - static/src/javascripts/lib/formatters.spec.js
 * to .ts, then delete it.
 */

// @flow
import { integerCommas } from 'lib/formatters';

describe('integerCommas', () => {
    it('should correctly add a comma for >=4 digit numbers', () => {
        const tests = [
            [1, '1'],
            [12, '12'],
            [123, '123'],
            [1234, '1,234'],
            [12345, '12,345'],
            [123456, '123,456'],
            [1234567, '1,234,567'],
            [12345678, '12,345,678'],
            [123456789, '123,456,789'],
            [1234567890, '1,234,567,890'],
        ];

        for (let i = 0; i < tests.length; i += 1) {
            expect(integerCommas(tests[i][0])).toBe(tests[i][1]);
        }
    });
});

describe('integerCommas', () => {
    it('should correctly add a comma for >=4 digit numbers', () => {
        const tests = [
            [1, '1'],
            [12, '12'],
            [123, '123'],
            [1234, '1,234'],
            [12345, '12k'],
            [123456, '123k'],
            [1234567, '1,234k'],
            [12345678, '12,345k'],
            [123456789, '123,456k'],
            [1234567890, '1,234,567k'],
        ];

        for (let i = 0; i < tests.length; i += 1) {
            expect(integerCommas(tests[i][0], true)).toBe(tests[i][1]);
        }
    });
});
