# For dev machines
GET         /assets/*path                          dev.DevAssetsController.at(path)

GET         /_healthcheck                           controllers.HealthCheck.healthCheck()

GET         /google1ec7a89a27d60d47.html            controllers.Assets.at(path = "/public", file = "google1ec7a89a27d60d47.html")

GET         /reauthenticate                         controllers.ReauthenticationController.renderForm(returnUrl : Option[String])
POST        /reauthenticate                         controllers.ReauthenticationController.processForm

GET         /c/:resetToken                          controllers.ResetPasswordController.processUpdatePasswordToken( resetToken : String)
POST        /reset-password/:resetToken             controllers.ResetPasswordController.resetPassword( resetToken : String )
GET         /reset-password/:resetToken             controllers.ResetPasswordController.renderResetPassword( resetToken : String )
GET         /password/confirm                       controllers.ChangePasswordController.renderPasswordConfirmation
GET         /password/change                        controllers.ChangePasswordController.displayForm
POST        /password/change                        controllers.ChangePasswordController.submitForm
GET         /password/reset-confirmation            controllers.ResetPasswordController.renderPasswordResetConfirmation
GET         /password/email-sent                    controllers.ResetPasswordController.renderEmailSentConfirmation
GET         /requestnewtoken                        controllers.ResetPasswordController.requestNewToken
GET         /email-prefs                            controllers.EmailController.preferences
POST        /email-prefs                            controllers.EmailController.savePreferences
GET         /user/id/:id                            controllers.PublicProfileController.renderProfileFromId(id: String, activityType = "discussions")
GET         /user/id/:id/:activityType              controllers.PublicProfileController.renderProfileFromId(id: String, activityType: String)
GET         /user/:vanityUrl                        controllers.PublicProfileController.renderProfileFromVanityUrl(vanityUrl: String, activityType = "discussions")
GET         /user/:vanityUrl/:activityType          controllers.PublicProfileController.renderProfileFromVanityUrl(vanityUrl: String, activityType: String)
GET         /public/edit                            controllers.EditProfileController.displayPublicProfileForm
POST        /public/edit                            controllers.EditProfileController.submitPublicProfileForm
GET         /account/edit                           controllers.EditProfileController.displayAccountForm
GET         /membership/edit                        controllers.EditProfileController.displayMembershipForm
GET         /digitalpack/edit                       controllers.EditProfileController.displayDigitalPackForm
GET         /privacy/edit                           controllers.EditProfileController.displayPrivacyForm
POST        /account/edit                           controllers.EditProfileController.submitAccountForm
POST        /privacy/edit                           controllers.EditProfileController.submitPrivacyForm
GET         /verify-email/:token                    controllers.EmailVerificationController.verify(token: String)
GET         /verify-email                           controllers.EmailVerificationController.resendEmailValidationEmail()

GET         /form/complete                          controllers.FormstackController.complete
GET         /form/:formReference                    controllers.FormstackController.formstackForm(formReference: String, composer: Boolean = false)
GET         /form/embed/:formReference              controllers.FormstackController.formstackForm(formReference: String, composer: Boolean = true)

GET         /et/subscribe/:subDefId                 controllers.ExactTargetController.subscribe(subDefId: String, returnUrl: String)


#Email Footer signup routes
GET        /email/form/$emailType<article|footer>/:listId                       controllers.EmailSignupController.renderForm(emailType: String, listId: Int)
GET        /email/:result                                                       controllers.EmailSignupController.subscriptionResult(result: String)
POST       /email                                                               controllers.EmailSignupController.submit()
OPTIONS    /email                                                               controllers.EmailSignupController.options()

# Account deletion
GET         /delete                                 controllers.AccountDeletionController.renderAccountDeletionForm
POST        /delete                                 controllers.AccountDeletionController.processAccountDeletionForm
GET         /delete/confirm                         controllers.AccountDeletionController.renderAccountDeletionConfirmation(autoDeletion: Boolean)
