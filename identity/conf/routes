# For dev machines
GET         /assets/*path                          dev.DevAssetsController.at(path)

GET         /_healthcheck                          conf.HealthCheck.healthcheck()

GET         /google1ec7a89a27d60d47.html            controllers.Assets.at(path = "/public", file = "google1ec7a89a27d60d47.html")

GET         /reauthenticate                         @controllers.ReauthenticationController.renderForm(returnUrl : Option[String])
POST        /reauthenticate                         @controllers.ReauthenticationController.processForm

GET         /signin                                 @controllers.SigninController.renderForm(returnUrl : Option[String], group: Option[String])
POST        /signin                                 @controllers.SigninController.processForm
GET         /signout                                @controllers.SignoutController.signout
GET         /reset                                  @controllers.ResetPasswordController.renderPasswordResetRequestForm
POST        /reset                                  @controllers.ResetPasswordController.processPasswordResetRequestForm
GET         /c/:resetToken                          @controllers.ResetPasswordController.processUpdatePasswordToken( resetToken : String)
POST        /reset-password/:resetToken             @controllers.ResetPasswordController.resetPassword( resetToken : String )
GET         /reset-password/:resetToken             @controllers.ResetPasswordController.renderResetPassword( resetToken : String )
GET         /password/confirm                       @controllers.ChangePasswordController.renderPasswordConfirmation
GET         /password/change                        @controllers.ChangePasswordController.displayForm
POST        /password/change                        @controllers.ChangePasswordController.submitForm
GET         /password/reset-confirmation            @controllers.ResetPasswordController.renderPasswordResetConfirmation
GET         /password/email-sent                    @controllers.ResetPasswordController.renderEmailSentConfirmation
GET         /requestnewtoken                        @controllers.ResetPasswordController.requestNewToken
GET         /register                               @controllers.RegistrationController.renderForm(returnUrl : Option[String], skipConfirmation : Option[Boolean], group: Option[String])
POST        /register                               @controllers.RegistrationController.processForm
GET         /register/confirm                       @controllers.RegistrationController.renderRegistrationConfirmation(returnUrl)
GET         /email-prefs                            @controllers.EmailController.preferences
POST        /email-prefs                            @controllers.EmailController.savePreferences
GET         /user/id/:id                            @controllers.PublicProfileController.renderProfileFromId(id: String, activityType = "discussions")
GET         /user/id/:id/:activityType              @controllers.PublicProfileController.renderProfileFromId(id: String, activityType: String)
GET         /user/:vanityUrl                        @controllers.PublicProfileController.renderProfileFromVanityUrl(vanityUrl: String, activityType = "discussions")
GET         /user/:vanityUrl/:activityType          @controllers.PublicProfileController.renderProfileFromVanityUrl(vanityUrl: String, activityType: String)
GET         /public/edit                            @controllers.EditProfileController.displayPublicProfileForm
POST        /public/edit                            @controllers.EditProfileController.submitPublicProfileForm
GET         /account/edit                           @controllers.EditProfileController.displayAccountForm
GET         /membership/edit                        @controllers.EditProfileController.displayMembershipForm
GET         /digitalpack/edit                       @controllers.EditProfileController.displayDigitalPackForm
GET         /privacy/edit                           @controllers.EditProfileController.displayPrivacyForm
POST        /account/edit                           @controllers.EditProfileController.submitAccountForm
POST        /privacy/edit                           @controllers.EditProfileController.submitPrivacyForm
GET         /verify-email/:token                    @controllers.EmailVerificationController.verify(token: String)
GET         /verify-email                           @controllers.EmailVerificationController.resendEmailValidationEmail()

GET         /form/complete                          @controllers.FormstackController.complete
GET         /form/:formReference                    @controllers.FormstackController.formstackForm(formReference: String, composer: Boolean = false)
GET         /form/embed/:formReference              @controllers.FormstackController.formstackForm(formReference: String, composer: Boolean = true)

GET         /et/subscribe/:subDefId                 @controllers.ExactTargetController.subscribe(subDefId: String, returnUrl: String)
GET         /save-content                           @controllers.SaveContentController.saveContentItem
GET         /saved-for-later                        @controllers.SaveContentController.listSavedContentPage
POST        /saved-for-later                        @controllers.SaveContentController.deleteSavedContentItemFromPage
GET         /agree/:groupCode                       @controllers.ThirdPartyConditionsController.renderAgree(groupCode: String)
POST        /agree/:groupCode                       @controllers.ThirdPartyConditionsController.agree(groupCode: String, returnUrl: Option[String])


#Email Footer signup routes
GET        /email                                                               controllers.EmailSignupController.renderPage()
GET        /email/form/$emailType<article|footer>/:listId                       controllers.EmailSignupController.renderForm(emailType: String, listId: Int)
GET        /email/:result                                                       controllers.EmailSignupController.subscriptionResult(result: String)
POST       /email                                                               controllers.EmailSignupController.submit()
OPTIONS    /email                                                               controllers.EmailSignupController.options()
