# For dev machines
GET         /assets/*path                          dev.DevAssetsController.at(path)

GET         /_healthcheck                           controllers.HealthCheck.healthCheck()

GET         /google1ec7a89a27d60d47.html            controllers.Assets.at(path = "/public", file = "google1ec7a89a27d60d47.html")

GET         /c/:resetToken                          controllers.ResetPasswordController.processUpdatePasswordToken( resetToken : String, returnUrl: Option[String])
POST        /reset-password/:resetToken             controllers.ResetPasswordController.resetPassword( resetToken : String, returnUrl: Option[String])
GET         /reset-password/:resetToken             controllers.ResetPasswordController.renderResetPassword( resetToken : String, returnUrl: Option[String] )
GET         /password/confirm                       controllers.ChangePasswordController.renderPasswordConfirmation(returnUrl: Option[String])
GET         /password/change                        controllers.ChangePasswordController.displayForm
POST        /password/change                        controllers.ChangePasswordController.submitForm
GET         /password/reset-confirmation            controllers.ResetPasswordController.renderPasswordResetConfirmation(returnUrl: Option[String])
GET         /password/email-sent                    controllers.ResetPasswordController.renderEmailSentConfirmation
POST        /password/guest                         controllers.editprofile.EditProfileController.guestPasswordSet()
GET         /user/id/:id                            controllers.PublicProfileController.renderProfileFromId(id: String, activityType = "discussions")
GET         /user/id/:id/:activityType              controllers.PublicProfileController.renderProfileFromId(id: String, activityType: String)
GET         /user/:vanityUrl                        controllers.PublicProfileController.renderProfileFromVanityUrl(vanityUrl: String, activityType = "discussions")
GET         /user/:vanityUrl/:activityType          controllers.PublicProfileController.renderProfileFromVanityUrl(vanityUrl: String, activityType: String)
GET         /verify-email/:token                    controllers.EmailVerificationController.verify(token: String)
GET         /verify-email                           controllers.EmailVerificationController.resendEmailValidationEmail

GET         /complete-registration                  controllers.EmailVerificationController.completeRegistration

GET         /form/complete                          controllers.FormstackController.complete
GET         /form/:formReference                    controllers.FormstackController.formstackForm(formReference: String, composer: Boolean = false)
GET         /form/embed/:formReference              controllers.FormstackController.formstackForm(formReference: String, composer: Boolean = true)

#Email Footer signup routes
GET        /email/form/$emailType<article|footer>/$listId<[0-9]+>               controllers.EmailSignupController.renderForm(emailType: String, listId: Int)
GET        /email/form/$emailType<article|footer>/:listName                     controllers.EmailSignupController.renderFormFromName(emailType: String, listName: String)
GET        /email/$result<success|invalid|error>                                controllers.EmailSignupController.subscriptionResult(result: String)
POST       /email                                                               controllers.EmailSignupController.submit()
OPTIONS    /email                                                               controllers.EmailSignupController.options()

# Account deletion
GET         /delete                                 controllers.AccountDeletionController.renderAccountDeletionForm
POST        /delete                                 controllers.AccountDeletionController.processAccountDeletionForm
GET         /delete/confirm                         controllers.AccountDeletionController.renderAccountDeletionConfirmation(autoDeletion: Boolean)

########################################################################################################################
# EDIT PROFILE
########################################################################################################################
GET         /public/edit                            controllers.editprofile.EditProfileController.redirectToPublicSettings

GET         /account/edit                           controllers.editprofile.EditProfileController.redirectToAccountSettings

GET         /membership/edit                        controllers.editprofile.EditProfileController.redirectToManageMembership
GET         /contribution/recurring/edit            controllers.editprofile.EditProfileController.redirectToManageContributions
GET         /digitalpack/edit                       controllers.editprofile.EditProfileController.redirectToManageSubscriptions

GET         /email-prefs                            controllers.editprofile.EditProfileController.redirectToEmailPrefs

########################################################################################################################
# PUBLIC EDIT PROFILE
########################################################################################################################
GET         /privacy-settings                       controllers.AdvertsManager.renderAdvertsManager(returnUrl : Option[String])

########################################################################################################################
# Upsell
########################################################################################################################
GET /confirm-email/thank-you                        controllers.UpsellController.confirmEmailThankYou(returnUrl: Option[String])

########################################################################################################################
# Consents journey
########################################################################################################################
GET         /consents/thank-you                     controllers.editprofile.EditProfileController.displayConsentsJourneyThankYou
GET         /consents                               controllers.editprofile.EditProfileController.displayConsentsJourney(consentHint: Option[String])
POST        /complete-consents                      controllers.editprofile.EditProfileController.submitRepermissionedFlag
GET         /complete-consents                      controllers.editprofile.EditProfileController.displayConsentComplete()
########################################################################################################################

########################################################################################################################
# Old routes
########################################################################################################################
GET         /consents/staywithus                    controllers.editprofile.EditProfileController.redirectToConsentsJourney()
GET         /privacy/edit                           controllers.editprofile.EditProfileController.redirectToEmailPrefs
