{
  "name": "bonzo",
  "description": "Library agnostic, extensible DOM utility",
  "version": "1.3.3",
  "homepage": "https://github.com/ded/bonzo",
  "author": {
    "name": "Dustin Diaz",
    "email": "dustin@dustindiaz.com",
    "url": "http://dustindiaz.com"
  },
  "contributors": [
    {
      "name": "Rod Vagg",
      "email": "rod@vagg.org",
      "url": "https://github.com/rvagg"
    }
  ],
  "keywords": [
    "ender",
    "dom",
    "nodes",
    "jquery",
    "iteration",
    "css"
  ],
  "main": "./bonzo.js",
  "ender": "./src/ender.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/ded/bonzo.git"
  },
  "devDependencies": {
    "qwery": "*",
    "bowser": "*",
    "sink-test": "*",
    "smoosh": "0.4.0"
  },
  "gitHead": "d997bb6694a57fe65e96cd9abcf1d49d96d13a7e",
  "readme": "Bonzo\n-----\n\nA library agnostic extensible DOM utility. Nothing else.\n\nBonzo is designed to live in any host library, such as [Ender](http://ender.jit.su), or simply as a stand-alone tool for the majority of your DOM-related tasks.\n\n**It looks like this:**\n\n``` js\nbonzo(elements)\n  .hide()\n  .addClass('foo')\n  .append('<p>the happs</p>')\n  .css({\n    color: 'red',\n    'background-color': 'white'\n  })\n  .show()\n```\n\n--------------------------------------------------------\n\n  * <a href=\"#useselector\"><b>Use with a selector engine</b></a>\n  * <a href=\"#extensions\"><b>Bonzo extension API</b></a>\n  * <a href=\"#api\"><b>Complete Bonzo API</b></a>\n  * <a href=\"#aboutname\"><b>About the name \"Bonzo\"</b></a>\n  * Contributing:\n    - <a href=\"#building\"><b>Building</b></a>\n    - <a href=\"#tests\"><b>Tests</b></a>\n  * <a href=\"#browsers\"><b>Browser support</b></a>\n  * <a href=\"#ender\"><b>Ender integration</b></a>\n  * <a href=\"#contributors\"><b>Contributors</b></a>\n  * <a href=\"#licence\"><b>Licence & copyright</b></a>\n\n--------------------------------------------------------\n\n<a name=\"useselector\"></a>\nUse with a selector engine\n-----------------------------\n\nA great way to use Bonzo is with a selector engine, like [Qwery](https://github.com/ded/qwery). You could wrap Bonzo up and augment your wrapper to inherit the same methods:\n\n``` js\nfunction $(selector) {\n  return bonzo(qwery(selector));\n}\n```\n\nThis now allows you to write the following code:\n\n``` js\n$('#content a[rel~=\"bookmark\"]').after('âˆš').css('text-decoration', 'none');\n```\n\n<a name=\"extensions\"></a>\nBonzo extension API\n-------------------\n\nOne of the greatest parts about Bonzo is its simplicity to hook into the internal chain to create custom methods. For example you can create a method called `color()` like this:\n\n``` js\nbonzo.aug({\n  color: function (c) {\n    return this.css('color', c);\n  }\n})\n\n// you can now do the following\n$('p').color('aqua')\n```\n\n<a name=\"api\"></a>\nComplete Bonzo API\n------------------\n\n  * each(callback)\n    - callback (element, index)\n  * map(callback, reject)\n    - callback (element, index)\n    - reject (element)\n  * html\n    - html() get\n    - html(str) set\n  * text\n    - text() get\n    - text(str) set\n  * addClass(c)\n  * removeClass(c)\n  * hasClass(c)\n  * toggleClass(c)\n  * show()\n  * hide()\n  * first()\n  * last()\n  * focus()\n  * blur()\n  * next()\n  * previous()\n  * parent()\n  * append(html || node)\n  * appendTo(target || selector)\n  * prepend(html || node)\n  * prependTo(target || selector)\n  * before(html || node)\n  * insertBefore(target || selector)\n  * after(html || node)\n  * insertAfter(target || selector)\n  * replaceWith(html || node)\n  * css()\n    - css(prop) get\n    - css(prop, val) set\n    - css({properties}) set\n  * offset()\n    - offset(x, y) set\n    - offset() get\n      - top\n      - left\n      - width\n      - height\n  * dim()\n    - width\n    - height\n  * attr\n    - attr(k) get\n    - attr(k, v) set\n    - attr(obj) set\n  * removeAttr(k)\n  * val\n    - val() get\n    - val(s) set\n  * data\n    - data() get all\n    - data(k) get\n    - data(k, v) set\n  * remove()\n  * empty()\n  * detach()\n  * scrollLeft\n    - scrollLeft() get\n    - scrollLeft(x) set\n  * scrollTop\n    - scrollTop() get\n    - scrollTop(y) set\n  * bonzo.aug({ properties })\n  * bonzo.doc()\n    - width\n    - height\n  * bonzo.viewport()\n    - width\n    - height\n  * bonzo.isAncestor(container, child)\n  * bonzo.noConflict\n\nAdded in the Ender bridge\n\n  * parents(selector)\n  * closest(selector)\n  * siblings()\n  * children()\n  * width()\n  * height()\n\n\n### Setting a query engine host\n\nFor the insertion methods you can set a query selector host:\n\n``` js\nbonzo.setQueryEngine(qwery)\nbonzo(bonzo.create('<div>')).insertAfter('.boosh a')\n```\n\n<a name=\"aboutname\"></a>\nAbout the name \"Bonzo\"\n----------------------\n*Bonzo Madrid* was a malicious battle school commander of whom eventually is killed by [Ender Wiggin](http://en.wikipedia.org/wiki/Ender_Wiggin). Bonzo represents the DOM, of whom we'd all love to slay.\n\n<a name=\"contributing\"></a>\nContributing\n------------\n\nYou should only edit the files in the *src/* directory. Bonzo is compiled into the *bonzo.js* and *bonzo.min.js* files contained in the root directory by the build command:\n\n<a name=\"building\"></a>\n### Building\n\n```sh\n$ npm install\n$ make\n```\n\n<a name=\"tests\"></a>\n### Tests\n\nPoint your test browser(s) to *tests/tests.html*, or:\n\n```sh\n$ open tests/tests.html\n```\n\nPlease try to include tests or adjustments to existing tests with all non-trivial contributions.\n\n<a name=\"browsers\"></a>\nBrowser support\n---------------\n\n  * IE6+\n  * Chrome\n  * Safari 4+\n  * Firefox 3.5+\n  * Opera\n\n<a name=\"ender\"></a>\nEnder integration\n-----------------\n\nBonzo is a registered npm package and fits in nicely with the [Ender](http://ender.no.de) framework. If you don't have Ender, you should install now, and never look back, *ever*. As a side note the *query engine host* is set for you when you include it with Ender.\n\n```sh\n$ npm install ender -g\n```\n\nTo combine Bonzo to your Ender build, you can add it as such:\n\n```sh\n$ ender build bonzo[ package-b[ package-c ...]]\n```\n\nor, add it to your existing ender package\n\n```sh\n$ ender add bonzo\n```\n\nBonzo is included in [The Jeesh](http://ender.jit.su/#jeesh), Ender's \"starter-pack\", when you `ender build jeesh` you'll get Bonzo and some other amazing libraries that'll make working in the browser a breeze. See the [Ender documentation](http://ender.jit.su/) for more details.\n\n<a name=\"contributors\"></a>\nContributors\n------------\n\n  * [Dustin Diaz](https://github.com/ded/bonzo/commits/master?author=ded)\n  * [Rod Vagg](https://github.com/ded/bonzo/commits/master?author=rvagg)\n  * [Jacob Thornton](https://github.com/ded/bonzo/commits/master?author=fat)\n\n<a name=\"licence\"></a>\nLicence & copyright\n-------------------\n\nBonzo is Copyright &copy; 2012 Dustin Diaz [@ded](https://twitter.com/ded) and licensed under the MIT licence. All rights not explicitly granted in the MIT license are reserved. See the included LICENSE file for more details.",
  "readmeFilename": "README.md",
  "_id": "bonzo@1.3.3"
}