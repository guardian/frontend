# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# authentication endpoints
GET         /login                        controllers.admin.Login.login
POST        /login                        controllers.admin.Login.loginPost
GET         /openIDCallback               controllers.admin.Login.openIDCallback
GET         /logout                       controllers.admin.Login.logout

# static files
GET         /public/*file                 controllers.Assets.at(path="/public", file)
GET         /assets/*path                 dev.DevAssetsController.at(path)

##################### NOTE ############################
#all endpoints below this line should be authenticated#
#######################################################

#Index page
GET         /                             controllers.admin.IndexController.index()
GET         /admin                        controllers.admin.IndexController.admin()

# API endpoint proxying for https
GET         /api/proxy/*path              controllers.admin.Api.proxy(path, callback)
GET         /api/tag                      controllers.admin.Api.tag(q, callback)
GET         /api/item/*path               controllers.admin.Api.item(path, callback)
GET         /json/proxy/*absUrl           controllers.admin.Api.json(absUrl)

# Ophan proxying for https
GET         /ophan/pageviews/*path            controllers.admin.OphanApiController.pageViews(path)
GET         /ophan/pageviews                  controllers.admin.OphanApiController.platformPageViews()
GET         /ophan/ads/render-time            controllers.admin.OphanApiController.adsRenderTime(platform)
GET         /ophan/ads/render-time/:adSlot    controllers.admin.OphanApiController.adRenderTime(adSlot, platform)

#Development endpoints
GET         /dev/switchboard              controllers.admin.SwitchboardController.renderSwitchboard()
POST        /dev/switchboard              controllers.admin.SwitchboardController.save()

# Analytics
GET         /analytics/abtests            controllers.admin.AnalyticsController.abtests()
GET         /analytics/confidence         controllers.admin.AnalyticsConfidenceController.renderConfidence()
GET         /analytics/commercial         controllers.admin.CommercialController.renderCommercial()

# Metrics
GET         /metrics/loadbalancers        controllers.admin.DashboardController.renderDashboard()
GET         /metrics/fastly               controllers.admin.FastlyController.renderFastly()
GET         /metrics/errors               controllers.admin.DashboardController.renderErrors()
GET         /metrics/errors/4xx           controllers.admin.DashboardController.render4XX()
GET         /metrics/errors/5xx           controllers.admin.DashboardController.render5XX()
GET         /metrics/memory               controllers.admin.DashboardController.renderMemory()
GET         /metrics/assets               controllers.admin.DashboardController.renderAssets()
GET         /metrics/googlebot/404        controllers.admin.DashboardController.renderGooglebot404s()

# Radiator
GET         /radiator                     controllers.admin.RadiatorController.renderRadiator()
GET         /radiator/pingdom             controllers.admin.RadiatorController.pingdom()
GET         /radiator/commit/*hash        controllers.admin.RadiatorController.commitDetail(hash)

# Redirects
GET         /redirects                    controllers.admin.RedirectController.redirect()
POST        /redirect-post                controllers.admin.RedirectController.redirectPost()

# Football Troubleshooter
GET         /troubleshoot/football        controllers.admin.FootballTroubleshooterController.renderFootballTroubleshooter()

GET         /troubleshoot/pages           controllers.admin.TroubleshooterController.index()
GET         /troubleshoot/test            controllers.admin.TroubleshooterController.test(id, testPath)

# Football admin
GET         /admin/football                                                                    controllers.admin.SiteController.index
GET         /admin/football/browse                                                             controllers.admin.PaBrowserController.browse
POST        /admin/football/browserRedirect                                                    controllers.admin.PaBrowserController.browserSubstitution
GET         /admin/football/browser/*query                                                     controllers.admin.PaBrowserController.browser(query)
GET         /admin/football/player                                                             controllers.admin.PlayerController.playerIndex
POST        /admin/football/player/card                                                        controllers.admin.PlayerController.redirectToCard
GET         /admin/football/player/card/competition/:cardType/:playerId/:teamId/:compId        controllers.admin.PlayerController.playerCardCompetition(cardType: String, playerId: String, teamId: String, compId: String)
GET         /admin/football/player/card/date/:cardType/:playerId/:teamId/:startDate            controllers.admin.PlayerController.playerCardDate(cardType: String, playerId: String, teamId: String, startDate: String)
GET         /admin/football/tables                                                             controllers.admin.TablesController.tablesIndex
POST        /admin/football/tables/league                                                      controllers.admin.TablesController.redirectToTable
GET         /admin/football/tables/league/:competitionId                                       controllers.admin.TablesController.leagueTable(competitionId: String)
GET         /admin/football/tables/league/:competitionId/:focus                                controllers.admin.TablesController.leagueTableFragment(competitionId: String, focus: String)
GET         /admin/football/tables/league/:competitionId/:team1Id/:team2Id                     controllers.admin.TablesController.leagueTable2Teams(competitionId: String, team1Id: String, team2Id: String)
GET         /admin/football/fronts                                                             controllers.admin.FrontsController.index
GET         /admin/football/fronts/live                                                        controllers.admin.FrontsController.matchDay
POST        /admin/football/fronts/results/redirect                                            controllers.admin.FrontsController.resultsRedirect
GET         /admin/football/fronts/results/:competition                                        controllers.admin.FrontsController.results(competition: String)
POST        /admin/football/fronts/fixtures/redirect                                           controllers.admin.FrontsController.fixturesRedirect
GET         /admin/football/fronts/fixtures/:competition                                       controllers.admin.FrontsController.fixtures(competition: String)
POST        /admin/football/fronts/tables/redirect                                             controllers.admin.FrontsController.tablesRedirect
GET         /admin/football/fronts/tables/:competition                                         controllers.admin.FrontsController.tables(competition: String)
GET         /admin/football/fronts/tables/:competition/:group                                  controllers.admin.FrontsController.groupTables(competition, group)
POST        /admin/football/fronts/matches/redirect                                            controllers.admin.FrontsController.matchesRedirect
GET         /admin/football/fronts/matches/:competitionId                                      controllers.admin.FrontsController.chooseMatchForComp(competitionId)
GET         /admin/football/fronts/matches/:competitionId/:teamId                              controllers.admin.FrontsController.chooseMatchForCompAndTeam(competitionId, teamId)
GET         /admin/football/fronts/matches/:competitionId/:team1Id/:team2Id                    controllers.admin.FrontsController.chooseMatchForCompAndTeams(competitionId, team1Id, team2Id)
GET         /admin/football/fronts/match/:matchId                                              controllers.admin.FrontsController.bigMatchSpecial(matchId)

GET         /admin/football/api/squad/:teamId                                                  controllers.admin.PlayerController.squad(teamId: String)

# Commercial reports
GET         /commercial/tags        controllers.admin.CommercialHelper.targets()
GET         /commercial/pageskins   controllers.admin.CommercialHelper.activeLineItems()