# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# For dev machines
GET        /assets/*file                                                                                  controllers.Assets.at(path="/public", file)


#Note the order of these is important

# Discussion
GET        /discussion/comment-counts                                                                     controllers.DiscussionApp.commentCount(shortUrls: String)
GET        /discussion/comment-counts.json                                                                controllers.DiscussionApp.commentCount(shortUrls: String)
GET        /discussion/*shortUrl.json                                                                     controllers.DiscussionApp.commentPage(shortUrl)
GET        /discussion/*shortUrl                                                                          controllers.DiscussionApp.commentPage(shortUrl)

#Core nav
GET        /most-read                                                                                     controllers.MostPopularController.render(path = "")
GET        /most-read.json                                                                                controllers.MostPopularController.render(path = "")
GET        /most-read/card.json                                                                           controllers.MostPopularController.renderCard()
GET        /most-read/expandable/*path.json                                                               controllers.MostPopularController.renderExpandable(path)
GET        /most-read/expandable/*path                                                                    controllers.MostPopularController.renderExpandable(path)
GET        /most-read/*path.json                                                                          controllers.MostPopularController.render(path)
GET        /most-read/*path                                                                               controllers.MostPopularController.render(path)

#Optimise User Journey to referrer
GET        /most-read-facebook                                                                            controllers.MostPopularFromFacebookController.render(path = "")
GET        /most-read-facebook.json         controllers.MostPopularFromFacebookController.render(path = "")
GET        /most-read-facebook/*path.json   controllers.MostPopularFromFacebookController.render(path)
GET        /most-read-facebook/*path        controllers.MostPopularFromFacebookController.render(path)
GET        /most-read-facebook/card.json    controllers.MostPopularFromFacebookController.renderCard()
GET        /most-read/expandable-facebook/*path.json     controllers.MostPopularFromFacebookController.renderExpandable(path)
GET        /most-read/expandable-facebook/*path          controllers.MostPopularFromFacebookController.renderExpandable(path)

GET        /top-stories                                                                                   controllers.TopStoriesController.render()
GET        /top-stories.json                                                                              controllers.TopStoriesController.renderJson()
GET        /top-stories/trails                                                                            controllers.TopStoriesController.renderTrails()
GET        /top-stories/trails.json                                                                       controllers.TopStoriesController.renderJsonTrails()
GET        /related/*path.json                                                                            controllers.RelatedController.render(path)
GET        /related/*path                                                                                 controllers.RelatedController.render(path)
GET        /recent/card.json                                                                              controllers.RecentController.render()


#Style-guide
GET        /style-guide                                                                                   controllers.StyleGuideController.renderIndex
GET        /style-guide/zones                                                                             controllers.StyleGuideController.renderZones
GET        /style-guide/typography                                                                        controllers.StyleGuideController.renderTypography
GET        /style-guide/modules                                                                           controllers.StyleGuideController.renderModules
GET        /style-guide/sprites                                                                           controllers.StyleGuideController.renderSprites
GET        /style-guide/csshelpers                                                                        controllers.StyleGuideController.cssHelpers
GET        /style-guide/codingstandards                                                                   controllers.StyleGuideController.codingStandards

#Football
GET        /football/fixtures/:year/:month/:day.json                                                      controllers.FixturesController.renderForJson(year, month, day)
GET        /football/fixtures/:year/:month/:day                                                           controllers.FixturesController.renderFor(year, month, day)
GET        /football/fixtures                                                                             controllers.FixturesController.render()
GET        /football/fixtures.json                                                                        controllers.FixturesController.renderJson()
GET        /football/:competition/fixtures/:year/:month/:day.json                                         controllers.CompetitionFixturesController.renderForJson(year, month, day, competition)
GET        /football/:competition/fixtures/:year/:month/:day                                              controllers.CompetitionFixturesController.renderFor(year, month, day, competition)
GET        /football/:competition/fixtures                                                                controllers.FixturesController.renderTag(competition)
GET        /football/:competition/fixtures.json                                                           controllers.FixturesController.renderTag(competition)

GET        /football/results/:year/:month/:day.json                                                       controllers.ResultsController.renderForJson(year, month, day)
GET        /football/results/:year/:month/:day                                                            controllers.ResultsController.renderFor(year, month, day)
GET        /football/results                                                                              controllers.ResultsController.render()
GET        /football/results.json                                                                         controllers.ResultsController.renderJson()
GET        /football/:competition/results/:year/:month/:day.json                                          controllers.CompetitionResultsController.renderForJson(year, month, day, competition)
GET        /football/:competition/results/:year/:month/:day                                               controllers.CompetitionResultsController.renderFor(year, month, day, competition)
GET        /football/:tag/results                                                                         controllers.ResultsController.renderTag(tag)
GET        /football/:tag/results,json                                                                    controllers.ResultsController.renderTag(tag)

GET        /football/live                                                                                 controllers.LiveMatchesController.render()
GET        /football/live.json                                                                            controllers.LiveMatchesController.renderJson()
GET        /football/:competition/live                                                                    controllers.LiveMatchesController.renderFor(competition)
GET        /football/:competition/live.json                                                               controllers.LiveMatchesController.renderFor(competition)

GET        /football/tables                                                                               controllers.LeagueTableController.render()
GET        /football/tables.json                                                                          controllers.LeagueTableController.renderJson()
GET        /football/:competition/table                                                                   controllers.LeagueTableController.renderCompetition(competition)
GET        /football/:competition/table.json                                                              controllers.LeagueTableController.renderCompetition(competition)

GET        /football/api/frontscores                                                                      controllers.FrontScoresController.render()
GET        /football/api/frontscores.json                                                                 controllers.FrontScoresController.renderJson()
GET        /football/api/competitiontable                                                                 controllers.CompetitionTablesController.renderCompetition()
GET        /football/api/competitiontable.json                                                            controllers.CompetitionTablesController.renderCompetitionJson()
GET        /football/api/teamtable/:teamId.json                                                           controllers.CompetitionTablesController.renderTeam(teamId)
GET        /football/api/teamtable/:teamId                                                                controllers.CompetitionTablesController.renderTeam(teamId)
GET        /football/api/teamfixtures/:teamId.json                                                        controllers.TeamFixturesController.renderComponent(teamId)
GET        /football/api/teamfixtures/:teamId                                                             controllers.TeamFixturesController.renderComponent(teamId)

GET        /football/api/match-nav/:year/:month/:day/:home/:away.json                                     controllers.MoreOnMatchController.matchNavJson(year, month, day, home, away)
GET        /football/api/match-nav/:year/:month/:day/:home/:away                                          controllers.MoreOnMatchController.matchNav(year, month, day, home, away)
GET        /football/api/match-nav/:matchId.json                                                          controllers.MoreOnMatchController.moreOn(matchId)
GET        /football/api/match-nav/:matchId                                                               controllers.MoreOnMatchController.moreOn(matchId)

GET        /football/competitions                                                                         controllers.CompetitionListController.render()
GET        /football/competitions.json                                                                    controllers.CompetitionListController.renderJson()
GET        /football/teams                                                                                controllers.LeagueTableController.renderTeamlist()
GET        /football/teams.json                                                                           controllers.LeagueTableController.renderTeamlistJson()

GET        /football/match/:year/:month/:day/$home<[\w\d-\.]+>-v-$away<[\w\d-\.]+>.json                   controllers.MatchController.renderMatchJson(year,month,day,home,away)
GET        /football/match/:year/:month/:day/$home<[\w\d-\.]+>-v-$away<[\w\d-\.]+>                        controllers.MatchController.renderMatch(year,month,day,home,away)
GET        /football/match/:matchId.json                                                                  controllers.MatchController.renderMatchId(matchId)
GET        /football/match/:matchId                                                                       controllers.MatchController.renderMatchId(matchId)

#Cricket
GET        /cricket/match/:matchId                                                                        controllers.CricketMatchController.renderMatchId(matchId)
GET        /sport/cricket/match/:matchId.json                                                             controllers.CricketMatchController.renderMatchId(matchId)
GET        /sport/cricket/match/:matchId                                                                  controllers.CricketMatchController.renderMatchId(matchId)

#Front
GET        /$path<(us|uk|au)?>                                                                            controllers.FrontController.render(path)
GET        /$path<(us|uk|au)?>.json                                                                       controllers.FrontController.render(path)
GET        /$path<(\w\w/)?(culture|sport|australia|commentisfree|business|money)>                         controllers.FrontController.render(path)
GET        /$path<(\w\w/)?(culture|sport|australia|commentisfree|business|money)>.json                    controllers.FrontController.render(path)
GET        /$path<(\w\w/)?(culture|sport|australia|commentisfree|business|money)>/trails                  controllers.FrontController.renderTrails(path)
GET        /$path<(\w\w/)?(culture|sport|australia|commentisfree|business|money)>/trails.json             controllers.FrontController.renderTrails(path)

# TODO these are legacy Front paths that can be deleted after www.theguardian.com go-live
GET        /$path<(culture|sport|australia|commentisfree|business|money)/\w\w-edition>                    controllers.FrontController.render(path)
GET        /$path<(culture|sport|australia|commentisfree|business|money)/\w\w-edition>.json               controllers.FrontController.render(path)
GET        /$path<(culture|sport|australia|commentisfree|business|money)/\w\w-edition>/trails             controllers.FrontController.renderTrails(path)
GET        /$path<(culture|sport|australia|commentisfree|business|money)/\w\w-edition>/trails.json        controllers.FrontController.renderTrails(path)

#Video
GET        /$path<[\w\d-]*/video/.*>.json                                                                 controllers.VideoController.render(path)
GET        /$path<[\w\d-]*/video/.*>                                                                      controllers.VideoController.render(path)
GET        /$path<[\w\d-]*/[\w\d-]*/video/.*>.json                                                        controllers.VideoController.render(path)
GET        /$path<[\w\d-]*/[\w\d-]*/video/.*>                                                             controllers.VideoController.render(path)

#Gallery
GET        /$path<[\w\d-]*/gallery/.*>/lightbox.json                                                      controllers.GalleryController.renderLightbox(path)
GET        /$path<[\w\d-]*/gallery/.*>.json                                                               controllers.GalleryController.render(path)
GET        /$path<[\w\d-]*/gallery/.*>                                                                    controllers.GalleryController.render(path)
GET        /$path<[\w\d-]*/[\w\d-]*/gallery/.*>/lightbox.json                                             controllers.GalleryController.renderLightbox(path)
GET        /$path<[\w\d-]*/[\w\d-]*/gallery/.*>.json                                                      controllers.GalleryController.render(path)
GET        /$path<[\w\d-]*/[\w\d-]*/gallery/.*>                                                           controllers.GalleryController.render(path)

#Section
GET        /sections                                                                                      controllers.SectionsController.render()
GET        /sections.json                                                                                 controllers.SectionsController.renderJson()
# culture and sport sections now live in front
GET        /$path<[\w\d-]*(/\w\w-edition)?>/trails.json                                                   controllers.SectionController.renderJsonTrails(path)
GET        /$path<[\w\d-]*(/\w\w-edition)?>/trails                                                        controllers.SectionController.renderTrails(path)
GET        /$path<[\w\d-]*(/\w\w-edition)?>.json                                                          controllers.SectionController.renderJson(path)
GET        /$path<[\w\d-]*(/\w\w-edition)?>                                                               controllers.SectionController.render(path)


#Tag
# note: reg ex so this doesn't interfer with $section/trails
GET        /$path<[\w\d-]*/(?!trails)[\w\d-]*>                                                            controllers.TagController.render(path)
GET        /$path<[\w\d-]*/(?!trails)[\w\d-]*>.json                                                       controllers.TagController.render(path)
GET        /$path<[\w\d-]*/(?!trails)[\w\d-]*>/trails                                                     controllers.TagController.renderTrails(path)
GET        /$path<[\w\d-]*/(?!trails)[\w\d-]*>/trails.json                                                controllers.TagController.renderTrails(path)
GET        /$path<[\w\d-]*/[\w\d-]*/[\w\d-]*>                                                             controllers.TagController.render(path)
GET        /$path<[\w\d-]*/[\w\d-]*/[\w\d-]*>.json                                                        controllers.TagController.render(path)
GET        /$path<[\w\d-]*/[\w\d-]*/[\w\d-]*>/trails                                                      controllers.TagController.renderTrails(path)
GET        /$path<[\w\d-]*/[\w\d-]*/[\w\d-]*>/trails.json                                                 controllers.TagController.renderTrails(path)

# Experimental
GET        /cards/opengraph/*path                                                                         controllers.CardController.opengraph(path)

#Articles
GET        /*path.json                                                                                    controllers.ArticleController.renderLatest(path, lastUpdate: Option[String])
GET        /*path                                                                                         controllers.ArticleController.render(path)


