# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET         /humans.txt                                                                                              controllers.Assets.at(path="/public", file="humans.txt")

# For dev machines
GET         /assets/internal/*file                                                                                   controllers.Assets.at(path="/public", file)
GET         /assets/*path                                                                                            dev.DevAssetsController.at(path)

# Diagnostics
GET         /px.gif                                                                                                  controllers.DiagnosticsController.px
GET         /ab.gif                                                                                                  controllers.DiagnosticsController.ab
GET         /js.gif                                                                                                  controllers.DiagnosticsController.js
GET         /count/$prefix<.+>.gif                                                                                   controllers.DiagnosticsController.analytics(prefix)

# Discussion
GET         /discussion/comment-box.json                                                                             controllers.DiscussionApp.commentBox()
GET         /discussion/comment-counts                                                                               controllers.DiscussionApp.commentCount(shortUrls: String)
GET         /discussion/comment-counts.json                                                                          controllers.DiscussionApp.commentCountJson(shortUrls: String)
GET         /discussion/comment/*id.json                                                                             controllers.DiscussionApp.commentJson(id: Int)
GET         /discussion/comment/*id                                                                                  controllers.DiscussionApp.comment(id: Int)
GET         /discussion/comment-permalink/*commentId.json                                                            controllers.DiscussionApp.commentPermalinkJson(commentId: Int)
GET         /discussion/comment-permalink/*commentId                                                                 controllers.DiscussionApp.commentPermalink(commentId: Int)
GET         /discussion/top/*discussionKey.json                                                                      controllers.DiscussionApp.topCommentsJson(discussionKey: discussion.model.DiscussionKey)
GET         /discussion/top/*discussionKey                                                                           controllers.DiscussionApp.topComments(discussionKey: discussion.model.DiscussionKey)
GET         /discussion/oldest/*discussionKey.json                                                                   controllers.DiscussionApp.oldestCommentsJson(discussionKey: discussion.model.DiscussionKey)
GET         /discussion/oldest/*discussionKey                                                                        controllers.DiscussionApp.oldestComments(discussionKey: discussion.model.DiscussionKey)
GET         /discussion/*discussionKey.json                                                                          controllers.DiscussionApp.commentsJson(discussionKey: discussion.model.DiscussionKey)
GET         /discussion/*discussionKey                                                                               controllers.DiscussionApp.comments(discussionKey: discussion.model.DiscussionKey)
GET         /open/cta/article/*discussionKey.json                                                                    controllers.CtaController.cta(discussionKey: discussion.model.DiscussionKey)

# Core Navigation
GET         /most-read                                                                                               controllers.MostPopularController.render(path = "")
GET         /most-read.json                                                                                          controllers.MostPopularController.render(path = "")
GET         /most-read/*path.json                                                                                    controllers.MostPopularController.renderJson(path)
GET         /most-read/*path                                                                                         controllers.MostPopularController.render(path)
GET         /most-read-geo.json                                                                                      controllers.MostPopularController.renderPopularGeoJson()
GET         /most-read-in-tag/*tag.json                                                                              controllers.PopularInTag.renderJson(tag)

GET         /top-stories                                                                                             controllers.TopStoriesController.renderTopStories()
GET         /top-stories.json                                                                                        controllers.TopStoriesController.renderTopStoriesJson()
GET         /top-stories/trails                                                                                      controllers.TopStoriesController.renderTrails()
GET         /top-stories/trails.json                                                                                 controllers.TopStoriesController.renderJsonTrails()
GET         /related/*path.json                                                                                      controllers.RelatedController.renderJson(path)
GET         /related/*path                                                                                           controllers.RelatedController.render(path)

GET         /preference/platform/:platform                                                                           controllers.ChangeViewController.render(platform, page)
GET         /preference/edition/:edition                                                                             controllers.ChangeEditionController.render(edition)
GET         /preference/front-alphas/:optAction                                                                      controllers.ChangeAlphaController.render(optAction, page)

GET         /cards/opengraph/*path.json                                                                              controllers.CardController.opengraph(path)

# Sport
GET         /sport/cricket/match/:matchId.json                                                                       controllers.CricketMatchController.renderMatchIdJson(matchId)
GET         /sport/cricket/match/:matchId                                                                            controllers.CricketMatchController.renderMatchId(matchId)

GET         /football/fixtures/:year/:month/:day.json                                                                football.controllers.FixturesController.renderForJson(year, month, day)
GET         /football/fixtures/:year/:month/:day                                                                     football.controllers.FixturesController.renderFor(year, month, day)
GET         /football/fixtures                                                                                       football.controllers.FixturesController.render()
GET         /football/fixtures.json                                                                                  football.controllers.FixturesController.renderJson()
GET         /football/:competition/fixtures/:year/:month/:day.json                                                   football.controllers.CompetitionFixturesController.renderForJson(year, month, day, competition)
GET         /football/:competition/fixtures/:year/:month/:day                                                        football.controllers.CompetitionFixturesController.renderFor(year, month, day, competition)
GET         /football/:competition/fixtures                                                                          football.controllers.FixturesController.renderTag(competition)
GET         /football/:competition/fixtures.json                                                                     football.controllers.FixturesController.renderTagJson(competition)

GET         /football/results/:year/:month/:day.json                                                                 football.controllers.ResultsController.renderForJson(year, month, day)
GET         /football/results/:year/:month/:day                                                                      football.controllers.ResultsController.renderFor(year, month, day)
GET         /football/results                                                                                        football.controllers.ResultsController.render()
GET         /football/results.json                                                                                   football.controllers.ResultsController.renderJson()
GET         /football/:competition/results/:year/:month/:day.json                                                    football.controllers.CompetitionResultsController.renderForJson(year, month, day, competition)
GET         /football/:competition/results/:year/:month/:day                                                         football.controllers.CompetitionResultsController.renderFor(year, month, day, competition)
GET         /football/:tag/results                                                                                   football.controllers.ResultsController.renderTag(tag)
GET         /football/:tag/results.json                                                                              football.controllers.ResultsController.renderTagJson(tag)

GET         /football/live                                                                                           football.controllers.LiveMatchesController.renderLiveMatches()
GET         /football/live.json                                                                                      football.controllers.LiveMatchesController.renderLiveMatchesJson()
GET         /football/:competition/live                                                                              football.controllers.LiveMatchesController.renderLiveMatchesFor(competition)
GET         /football/:competition/live.json                                                                         football.controllers.LiveMatchesController.renderLiveMatchesJsonFor(competition)

GET         /football/tables                                                                                         football.controllers.LeagueTableController.renderLeagueTable()
GET         /football/tables.json                                                                                    football.controllers.LeagueTableController.renderLeagueTableJson()
GET         /football/:competition/table                                                                             football.controllers.LeagueTableController.renderCompetition(competition)
GET         /football/:competition/table.json                                                                        football.controllers.LeagueTableController.renderCompetitionJson(competition)

GET         /football/api/frontscores                                                                                football.controllers.FrontScoresController.renderFrontScores()
GET         /football/api/frontscores.json                                                                           football.controllers.FrontScoresController.renderFrontScoresJson()
GET         /football/api/competitiontable                                                                           football.controllers.CompetitionTablesController.renderCompetition()
GET         /football/api/competitiontable.json                                                                      football.controllers.CompetitionTablesController.renderCompetitionJson()
GET         /football/api/teamtable/:teamId.json                                                                     football.controllers.CompetitionTablesController.renderTeamJson(teamId)
GET         /football/api/teamtable/:teamId                                                                          football.controllers.CompetitionTablesController.renderTeam(teamId)
GET         /football/api/teamfixtures/:teamId.json                                                                  football.controllers.TeamFixturesController.renderComponentJson(teamId)
GET         /football/api/teamfixtures/:teamId                                                                       football.controllers.TeamFixturesController.renderComponent(teamId)

GET         /football/api/match-nav/:year/:month/:day/:home/:away.json                                               football.controllers.MoreOnMatchController.matchNavJson(year, month, day, home, away)
GET         /football/api/match-nav/:year/:month/:day/:home/:away                                                    football.controllers.MoreOnMatchController.matchNav(year, month, day, home, away)
GET         /football/api/match-nav/:matchId.json                                                                    football.controllers.MoreOnMatchController.moreOnJson(matchId)
GET         /football/api/match-nav/:matchId                                                                         football.controllers.MoreOnMatchController.moreOn(matchId)

GET         /football/competitions                                                                                   football.controllers.CompetitionListController.renderCompetitionList()
GET         /football/competitions.json                                                                              football.controllers.CompetitionListController.renderCompetitionListJson()
GET         /football/teams                                                                                          football.controllers.LeagueTableController.renderTeamlist()
GET         /football/teams.json                                                                                     football.controllers.LeagueTableController.renderTeamlistJson()

GET         /football/match/:year/:month/:day/$home<[\w\d-\.]+>-v-$away<[\w\d-\.]+>.json                             football.controllers.MatchController.renderMatchJson(year,month,day,home,away)
GET         /football/match/:year/:month/:day/$home<[\w\d-\.]+>-v-$away<[\w\d-\.]+>                                  football.controllers.MatchController.renderMatch(year,month,day,home,away)
GET         /football/match/:matchId.json                                                                            football.controllers.MatchController.renderMatchIdJson(matchId)
GET         /football/match/:matchId                                                                                 football.controllers.MatchController.renderMatchId(matchId)

# Admin
GET         /login                                                                                                   controllers.admin.Login.login
POST        /login                                                                                                   controllers.admin.Login.loginPost
GET         /openIDCallback                                                                                          controllers.admin.Login.openIDCallback
GET         /logout                                                                                                  controllers.admin.Login.logout
GET         /admin                                                                                                   controllers.admin.IndexController.admin()
GET         /api/proxy/*path                                                                                         controllers.admin.Api.proxy(path, callback)
GET         /api/tag                                                                                                 controllers.admin.Api.tag(q, callback)
GET         /api/item/*path                                                                                          controllers.admin.Api.item(path, callback)
GET         /json/proxy/*absUrl                                                                                      controllers.admin.Api.json(absUrl)
GET         /ophan/pageviews/*path                                                                                   controllers.admin.OphanApiController.pageViews(path)
GET         /ophan/pageviews                                                                                         controllers.admin.OphanApiController.platformPageViews()
GET         /dev/switchboard                                                                                         controllers.admin.SwitchboardController.renderSwitchboard()
POST        /dev/switchboard                                                                                         controllers.admin.SwitchboardController.save()
GET         /analytics/kpis                                                                                          controllers.admin.AnalyticsController.kpis()
GET         /analytics/pageviews                                                                                     controllers.admin.AnalyticsController.pageviews()
GET         /analytics/browsers                                                                                      controllers.admin.AnalyticsController.browsers()
GET         /analytics/abtests                                                                                       controllers.admin.AnalyticsController.abtests()
GET         /metrics/loadbalancers                                                                                   controllers.admin.DashboardController.renderDashboard()
GET         /analytics/confidence                                                                                    controllers.admin.AnalyticsConfidenceController.renderConfidence()
GET         /metrics/fastly                                                                                          controllers.admin.FastlyController.renderFastly()
GET         /metrics/errors                                                                                          controllers.admin.DashboardController.renderErrors()
GET         /metrics/errors/4xx                                                                                      controllers.admin.DashboardController.render4XX()
GET         /metrics/errors/5xx                                                                                      controllers.admin.DashboardController.render5XX()
GET         /metrics/memory                                                                                          controllers.admin.DashboardController.renderMemory()
GET         /metrics/assets                                                                                          controllers.admin.DashboardController.renderAssets()
GET         /radiator                                                                                                controllers.admin.RadiatorController.renderRadiator()
GET         /radiator/pingdom                                                                                        controllers.admin.RadiatorController.pingdom()
GET         /radiator/commit/*hash                                                                                   controllers.admin.RadiatorController.commitDetail(hash)
GET         /radiator/livestats                                                                                      controllers.admin.RadiatorController.liveStats()
GET         /troubleshoot/football                                                                                   controllers.admin.FootballTroubleshooterController.renderFootballTroubleshooter()
GET         /troubleshoot/pages                                                                                      controllers.admin.TroubleshooterController.index()
GET         /troubleshoot/test                                                                                       controllers.admin.TroubleshooterController.test(id, testPath)

# Football admin

GET         /admin/football                                                                                          controllers.admin.SiteController.index
GET         /admin/football/browse                                                                                   controllers.admin.PaBrowserController.browse
POST        /admin/football/browserRedirect                                                                          controllers.admin.PaBrowserController.browserSubstitution
GET         /admin/football/browser/*query                                                                           controllers.admin.PaBrowserController.browser(query)
GET         /admin/football/team                                                                                     controllers.admin.TeamController.teamIndex
POST        /admin/football/team/head2head                                                                           controllers.admin.TeamController.redirectToTeamHead2Head
GET         /admin/football/team/head2head/:team1Id/:team2Id                                                         controllers.admin.TeamController.teamHead2Head(team1Id: String, team2Id: String)
POST        /admin/football/team/images                                                                              controllers.admin.TeamController.redirectToSquadPictures
GET         /admin/football/team/images/:teamId                                                                      controllers.admin.TeamController.squadPictures(teamId: String)
GET         /admin/football/player                                                                                   controllers.admin.PlayerController.playerIndex
POST        /admin/football/player/head2head                                                                         controllers.admin.PlayerController.redirectToHead2Head
GET         /admin/football/player/head2head/:player1Id/:player2Id                                                   controllers.admin.PlayerController.head2Head(player1Id: String, player2Id: String)
POST        /admin/football/player/card                                                                              controllers.admin.PlayerController.redirectToCard
GET         /admin/football/player/card/:playerId                                                                    controllers.admin.PlayerController.playerCard(playerId: String)
GET         /admin/football/tables                                                                                   controllers.admin.TablesController.tablesIndex
POST        /admin/football/tables/league                                                                            controllers.admin.TablesController.redirectToTable
GET         /admin/football/tables/league/:competitionId                                                             controllers.admin.TablesController.leagueTable(competitionId: String)
GET         /admin/football/tables/league/:competitionId/:focus                                                      controllers.admin.TablesController.leagueTableFragment(competitionId: String, focus: String)
GET         /admin/football/tables/league/:competitionId/:team1Id/:team2Id                                           controllers.admin.TablesController.leagueTable2Teams(competitionId: String, team1Id: String, team2Id: String)

# Commercial
GET         /commercial/travel/offers.json                                                                           controllers.commercial.TravelOffers.listOffers
GET         /commercial/jobs.json                                                                                    controllers.commercial.JobAds.jobs
GET         /commercial/masterclasses.json                                                                           controllers.commercial.MasterClasses.list
GET         /commercial/soulmates/mixed.json                                                                         controllers.commercial.SoulmateAds.mixed
GET         /commercial/money/bestbuys.json                                                                          controllers.commercial.MoneyOffers.bestBuys(format="json")
GET         /commercial/books/bestsellers.json                                                                       controllers.commercial.BookOffers.bestsellers(format="json")
GET         /commercial/books/book/*pageId.json                                                                      controllers.commercial.BookOffers.singleBook(pageId, format="json")
GET         /commercial/books/book/*pageId                                                                           controllers.commercial.BookOffers.singleBook(pageId, format="html")

# Onward journeys
GET         /onward/recently-published                                                                               controllers.LatestContentController.recentlyPublished()

# Facia
GET         /                                                                                                        controllers.FaciaController.editionRedirect(path = "")
GET         /$path<(culture|sport|australia|commentisfree|business|money)>                                           controllers.FaciaController.editionRedirect(path)
GET         /$path<(us|uk|au|us-alpha|uk-alpha|au-alpha)?>                                                           controllers.FaciaController.renderEditionFront(path)
GET         /$path<(us|uk|au|us-alpha|uk-alpha|au-alpha)?>.json                                                      controllers.FaciaController.renderEditionFrontJson(path)
GET         /$path<((uk|us|au)/)?(culture|sport|australia|commentisfree|business|money)>                             controllers.FaciaController.renderEditionSectionFront(path)
GET         /$path<((uk|us|au)/)?(culture|sport|australia|commentisfree|business|money)>.json                        controllers.FaciaController.renderEditionSectionFrontJson(path)

#Facia Press
GET         /pressed/*path                                                                                           controllers.FaciaController.renderFaciaPress(path)

GET         /collection/$id<[\w\d-/]*>/rss                                                                           controllers.FaciaController.renderCollectionRss(id)
GET         /collection/$id<[\w\d-/]*>                                                                               controllers.FaciaController.renderEditionCollection(id)
GET         /collection/$id<[\w\d-/]*>.json                                                                          controllers.FaciaController.renderEditionCollectionJson(id)

# Applications
GET         /sections                                                                                                controllers.SectionsController.renderSections()
GET         /sections.json                                                                                           controllers.SectionsController.renderSectionsJson()

GET         /$path<[\w\d-]*(/[\w\d-]*)?/gallery/.*>/lightbox.json                                                    controllers.GalleryController.renderLightbox(path)
GET         /$path<[\w\d-]*(/[\w\d-]*)?/gallery/.*>.json                                                             controllers.GalleryController.renderJson(path)
GET         /$path<[\w\d-]*(/[\w\d-]*)?/gallery/.*>                                                                  controllers.GalleryController.render(path)

GET         /$path<[\w\d-]*(/[\w\d-]*)?/(cartoon|graphic|picture)/.*>.json                                           controllers.ImageContentController.renderJson(path)
GET         /$path<[\w\d-]*(/[\w\d-]*)?/(cartoon|graphic|picture)/.*>                                                controllers.ImageContentController.render(path)

GET         /$path<[\w\d-]*(/[\w\d-]*)?/video/.*>.json                                                               controllers.VideoController.renderJson(path)
GET         /$path<[\w\d-]*(/[\w\d-]*)?/video/.*>                                                                    controllers.VideoController.render(path)


GET         /$path<[\w\d-]*(/[\w\d-]*)?(/[\w\d-]*)?>/trails.json                                                     controllers.IndexController.renderTrailsJson(path)
GET         /$path<[\w\d-]*(/[\w\d-]*)?(/[\w\d-]*)?>/trails                                                          controllers.IndexController.renderTrails(path)
GET         /$path<[\w\d-]*(/[\w\d-]*)?(/[\w\d-]*)?>.json                                                            controllers.IndexController.renderJson(path)
GET         /$path<[\w\d-]*(/[\w\d-]*)?(/[\w\d-]*)?>                                                                 controllers.IndexController.render(path)
GET         /$leftSide<[\w\d-]*(/[\w\d-]*)?(/[\w\d-]*)?>+$rightSide<[\w\d-]*(/[\w\d-]*)?(/[\w\d-]*)?>                controllers.IndexController.renderCombiner(leftSide, rightSide)

GET         /$path<[\w\d-]*(/[\w\d-]*)?/(interactive|ng-interactive)/.*>.json                                        controllers.InteractiveController.renderInteractiveJson(path)
GET         /$path<[\w\d-]*(/[\w\d-]*)?/(interactive|ng-interactive)/.*>                                             controllers.InteractiveController.renderInteractive(path)

# Articles
GET         /*path.json                                                                                              controllers.ArticleController.renderLatest(path, lastUpdate: Option[String])
GET         /*path                                                                                                   controllers.ArticleController.renderArticle(path)
